// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "scaleImage.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<8> scaleImage::ap_const_lv8_0 = "00000000";
const sc_lv<1> scaleImage::ap_const_lv1_0 = "0";
const sc_logic scaleImage::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic scaleImage::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> scaleImage::ap_const_lv2_0 = "00";
const sc_lv<2> scaleImage::ap_const_lv2_1 = "1";
const bool scaleImage::ap_const_boolean_1 = true;

scaleImage::scaleImage(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Block_proc_U0 = new Block_proc("Block_proc_U0");
    Block_proc_U0->ap_clk(ap_clk);
    Block_proc_U0->ap_rst(ap_rst_n_inv);
    Block_proc_U0->ap_start(Block_proc_U0_ap_start);
    Block_proc_U0->start_full_n(start_for_Resize_U0_full_n);
    Block_proc_U0->ap_done(Block_proc_U0_ap_done);
    Block_proc_U0->ap_continue(Block_proc_U0_ap_continue);
    Block_proc_U0->ap_idle(Block_proc_U0_ap_idle);
    Block_proc_U0->ap_ready(Block_proc_U0_ap_ready);
    Block_proc_U0->start_out(Block_proc_U0_start_out);
    Block_proc_U0->start_write(Block_proc_U0_start_write);
    Block_proc_U0->inImage_rows_V_out_din(Block_proc_U0_inImage_rows_V_out_din);
    Block_proc_U0->inImage_rows_V_out_full_n(inImage_rows_V_c_full_n);
    Block_proc_U0->inImage_rows_V_out_write(Block_proc_U0_inImage_rows_V_out_write);
    Block_proc_U0->inImage_cols_V_out_din(Block_proc_U0_inImage_cols_V_out_din);
    Block_proc_U0->inImage_cols_V_out_full_n(inImage_cols_V_c_full_n);
    Block_proc_U0->inImage_cols_V_out_write(Block_proc_U0_inImage_cols_V_out_write);
    Block_proc_U0->outImage_rows_V_out_din(Block_proc_U0_outImage_rows_V_out_din);
    Block_proc_U0->outImage_rows_V_out_full_n(outImage_rows_V_c_full_n);
    Block_proc_U0->outImage_rows_V_out_write(Block_proc_U0_outImage_rows_V_out_write);
    Block_proc_U0->outImage_cols_V_out_din(Block_proc_U0_outImage_cols_V_out_din);
    Block_proc_U0->outImage_cols_V_out_full_n(outImage_cols_V_c_full_n);
    Block_proc_U0->outImage_cols_V_out_write(Block_proc_U0_outImage_cols_V_out_write);
    AXIvideo2Mat_U0 = new AXIvideo2Mat("AXIvideo2Mat_U0");
    AXIvideo2Mat_U0->ap_clk(ap_clk);
    AXIvideo2Mat_U0->ap_rst(ap_rst_n_inv);
    AXIvideo2Mat_U0->ap_start(AXIvideo2Mat_U0_ap_start);
    AXIvideo2Mat_U0->ap_done(AXIvideo2Mat_U0_ap_done);
    AXIvideo2Mat_U0->ap_continue(AXIvideo2Mat_U0_ap_continue);
    AXIvideo2Mat_U0->ap_idle(AXIvideo2Mat_U0_ap_idle);
    AXIvideo2Mat_U0->ap_ready(AXIvideo2Mat_U0_ap_ready);
    AXIvideo2Mat_U0->inStream_TDATA(inStream_TDATA);
    AXIvideo2Mat_U0->inStream_TVALID(inStream_TVALID);
    AXIvideo2Mat_U0->inStream_TREADY(AXIvideo2Mat_U0_inStream_TREADY);
    AXIvideo2Mat_U0->inStream_TKEEP(inStream_TKEEP);
    AXIvideo2Mat_U0->inStream_TSTRB(inStream_TSTRB);
    AXIvideo2Mat_U0->inStream_TUSER(inStream_TUSER);
    AXIvideo2Mat_U0->inStream_TLAST(inStream_TLAST);
    AXIvideo2Mat_U0->inStream_TID(inStream_TID);
    AXIvideo2Mat_U0->inStream_TDEST(inStream_TDEST);
    AXIvideo2Mat_U0->img_rows_V_dout(inImage_rows_V_c_dout);
    AXIvideo2Mat_U0->img_rows_V_empty_n(inImage_rows_V_c_empty_n);
    AXIvideo2Mat_U0->img_rows_V_read(AXIvideo2Mat_U0_img_rows_V_read);
    AXIvideo2Mat_U0->img_cols_V_dout(inImage_cols_V_c_dout);
    AXIvideo2Mat_U0->img_cols_V_empty_n(inImage_cols_V_c_empty_n);
    AXIvideo2Mat_U0->img_cols_V_read(AXIvideo2Mat_U0_img_cols_V_read);
    AXIvideo2Mat_U0->img_data_stream_V_din(AXIvideo2Mat_U0_img_data_stream_V_din);
    AXIvideo2Mat_U0->img_data_stream_V_full_n(inImage_data_stream_s_full_n);
    AXIvideo2Mat_U0->img_data_stream_V_write(AXIvideo2Mat_U0_img_data_stream_V_write);
    AXIvideo2Mat_U0->img_rows_V_out_din(AXIvideo2Mat_U0_img_rows_V_out_din);
    AXIvideo2Mat_U0->img_rows_V_out_full_n(inImage_rows_V_c8_full_n);
    AXIvideo2Mat_U0->img_rows_V_out_write(AXIvideo2Mat_U0_img_rows_V_out_write);
    AXIvideo2Mat_U0->img_cols_V_out_din(AXIvideo2Mat_U0_img_cols_V_out_din);
    AXIvideo2Mat_U0->img_cols_V_out_full_n(inImage_cols_V_c9_full_n);
    AXIvideo2Mat_U0->img_cols_V_out_write(AXIvideo2Mat_U0_img_cols_V_out_write);
    Resize_U0 = new Resize("Resize_U0");
    Resize_U0->ap_clk(ap_clk);
    Resize_U0->ap_rst(ap_rst_n_inv);
    Resize_U0->ap_start(Resize_U0_ap_start);
    Resize_U0->start_full_n(start_for_Mat2AXIvideo_U0_full_n);
    Resize_U0->ap_done(Resize_U0_ap_done);
    Resize_U0->ap_continue(Resize_U0_ap_continue);
    Resize_U0->ap_idle(Resize_U0_ap_idle);
    Resize_U0->ap_ready(Resize_U0_ap_ready);
    Resize_U0->start_out(Resize_U0_start_out);
    Resize_U0->start_write(Resize_U0_start_write);
    Resize_U0->p_src_rows_V_dout(inImage_rows_V_c8_dout);
    Resize_U0->p_src_rows_V_empty_n(inImage_rows_V_c8_empty_n);
    Resize_U0->p_src_rows_V_read(Resize_U0_p_src_rows_V_read);
    Resize_U0->p_src_cols_V_dout(inImage_cols_V_c9_dout);
    Resize_U0->p_src_cols_V_empty_n(inImage_cols_V_c9_empty_n);
    Resize_U0->p_src_cols_V_read(Resize_U0_p_src_cols_V_read);
    Resize_U0->p_src_data_stream_V_dout(inImage_data_stream_s_dout);
    Resize_U0->p_src_data_stream_V_empty_n(inImage_data_stream_s_empty_n);
    Resize_U0->p_src_data_stream_V_read(Resize_U0_p_src_data_stream_V_read);
    Resize_U0->p_dst_rows_V_dout(outImage_rows_V_c_dout);
    Resize_U0->p_dst_rows_V_empty_n(outImage_rows_V_c_empty_n);
    Resize_U0->p_dst_rows_V_read(Resize_U0_p_dst_rows_V_read);
    Resize_U0->p_dst_cols_V_dout(outImage_cols_V_c_dout);
    Resize_U0->p_dst_cols_V_empty_n(outImage_cols_V_c_empty_n);
    Resize_U0->p_dst_cols_V_read(Resize_U0_p_dst_cols_V_read);
    Resize_U0->p_dst_data_stream_V_din(Resize_U0_p_dst_data_stream_V_din);
    Resize_U0->p_dst_data_stream_V_full_n(outImage_data_stream_full_n);
    Resize_U0->p_dst_data_stream_V_write(Resize_U0_p_dst_data_stream_V_write);
    Resize_U0->p_dst_rows_V_out_din(Resize_U0_p_dst_rows_V_out_din);
    Resize_U0->p_dst_rows_V_out_full_n(outImage_rows_V_c10_full_n);
    Resize_U0->p_dst_rows_V_out_write(Resize_U0_p_dst_rows_V_out_write);
    Resize_U0->p_dst_cols_V_out_din(Resize_U0_p_dst_cols_V_out_din);
    Resize_U0->p_dst_cols_V_out_full_n(outImage_cols_V_c11_full_n);
    Resize_U0->p_dst_cols_V_out_write(Resize_U0_p_dst_cols_V_out_write);
    Mat2AXIvideo_U0 = new Mat2AXIvideo("Mat2AXIvideo_U0");
    Mat2AXIvideo_U0->ap_clk(ap_clk);
    Mat2AXIvideo_U0->ap_rst(ap_rst_n_inv);
    Mat2AXIvideo_U0->ap_start(Mat2AXIvideo_U0_ap_start);
    Mat2AXIvideo_U0->ap_done(Mat2AXIvideo_U0_ap_done);
    Mat2AXIvideo_U0->ap_continue(Mat2AXIvideo_U0_ap_continue);
    Mat2AXIvideo_U0->ap_idle(Mat2AXIvideo_U0_ap_idle);
    Mat2AXIvideo_U0->ap_ready(Mat2AXIvideo_U0_ap_ready);
    Mat2AXIvideo_U0->img_rows_V_dout(outImage_rows_V_c10_dout);
    Mat2AXIvideo_U0->img_rows_V_empty_n(outImage_rows_V_c10_empty_n);
    Mat2AXIvideo_U0->img_rows_V_read(Mat2AXIvideo_U0_img_rows_V_read);
    Mat2AXIvideo_U0->img_cols_V_dout(outImage_cols_V_c11_dout);
    Mat2AXIvideo_U0->img_cols_V_empty_n(outImage_cols_V_c11_empty_n);
    Mat2AXIvideo_U0->img_cols_V_read(Mat2AXIvideo_U0_img_cols_V_read);
    Mat2AXIvideo_U0->img_data_stream_V_dout(outImage_data_stream_dout);
    Mat2AXIvideo_U0->img_data_stream_V_empty_n(outImage_data_stream_empty_n);
    Mat2AXIvideo_U0->img_data_stream_V_read(Mat2AXIvideo_U0_img_data_stream_V_read);
    Mat2AXIvideo_U0->outStream_TDATA(Mat2AXIvideo_U0_outStream_TDATA);
    Mat2AXIvideo_U0->outStream_TVALID(Mat2AXIvideo_U0_outStream_TVALID);
    Mat2AXIvideo_U0->outStream_TREADY(outStream_TREADY);
    Mat2AXIvideo_U0->outStream_TKEEP(Mat2AXIvideo_U0_outStream_TKEEP);
    Mat2AXIvideo_U0->outStream_TSTRB(Mat2AXIvideo_U0_outStream_TSTRB);
    Mat2AXIvideo_U0->outStream_TUSER(Mat2AXIvideo_U0_outStream_TUSER);
    Mat2AXIvideo_U0->outStream_TLAST(Mat2AXIvideo_U0_outStream_TLAST);
    Mat2AXIvideo_U0->outStream_TID(Mat2AXIvideo_U0_outStream_TID);
    Mat2AXIvideo_U0->outStream_TDEST(Mat2AXIvideo_U0_outStream_TDEST);
    inImage_rows_V_c_U = new fifo_w10_d2_A("inImage_rows_V_c_U");
    inImage_rows_V_c_U->clk(ap_clk);
    inImage_rows_V_c_U->reset(ap_rst_n_inv);
    inImage_rows_V_c_U->if_read_ce(ap_var_for_const0);
    inImage_rows_V_c_U->if_write_ce(ap_var_for_const0);
    inImage_rows_V_c_U->if_din(Block_proc_U0_inImage_rows_V_out_din);
    inImage_rows_V_c_U->if_full_n(inImage_rows_V_c_full_n);
    inImage_rows_V_c_U->if_write(Block_proc_U0_inImage_rows_V_out_write);
    inImage_rows_V_c_U->if_dout(inImage_rows_V_c_dout);
    inImage_rows_V_c_U->if_empty_n(inImage_rows_V_c_empty_n);
    inImage_rows_V_c_U->if_read(AXIvideo2Mat_U0_img_rows_V_read);
    inImage_cols_V_c_U = new fifo_w11_d2_A("inImage_cols_V_c_U");
    inImage_cols_V_c_U->clk(ap_clk);
    inImage_cols_V_c_U->reset(ap_rst_n_inv);
    inImage_cols_V_c_U->if_read_ce(ap_var_for_const0);
    inImage_cols_V_c_U->if_write_ce(ap_var_for_const0);
    inImage_cols_V_c_U->if_din(Block_proc_U0_inImage_cols_V_out_din);
    inImage_cols_V_c_U->if_full_n(inImage_cols_V_c_full_n);
    inImage_cols_V_c_U->if_write(Block_proc_U0_inImage_cols_V_out_write);
    inImage_cols_V_c_U->if_dout(inImage_cols_V_c_dout);
    inImage_cols_V_c_U->if_empty_n(inImage_cols_V_c_empty_n);
    inImage_cols_V_c_U->if_read(AXIvideo2Mat_U0_img_cols_V_read);
    outImage_rows_V_c_U = new fifo_w11_d3_A("outImage_rows_V_c_U");
    outImage_rows_V_c_U->clk(ap_clk);
    outImage_rows_V_c_U->reset(ap_rst_n_inv);
    outImage_rows_V_c_U->if_read_ce(ap_var_for_const0);
    outImage_rows_V_c_U->if_write_ce(ap_var_for_const0);
    outImage_rows_V_c_U->if_din(Block_proc_U0_outImage_rows_V_out_din);
    outImage_rows_V_c_U->if_full_n(outImage_rows_V_c_full_n);
    outImage_rows_V_c_U->if_write(Block_proc_U0_outImage_rows_V_out_write);
    outImage_rows_V_c_U->if_dout(outImage_rows_V_c_dout);
    outImage_rows_V_c_U->if_empty_n(outImage_rows_V_c_empty_n);
    outImage_rows_V_c_U->if_read(Resize_U0_p_dst_rows_V_read);
    outImage_cols_V_c_U = new fifo_w11_d3_A("outImage_cols_V_c_U");
    outImage_cols_V_c_U->clk(ap_clk);
    outImage_cols_V_c_U->reset(ap_rst_n_inv);
    outImage_cols_V_c_U->if_read_ce(ap_var_for_const0);
    outImage_cols_V_c_U->if_write_ce(ap_var_for_const0);
    outImage_cols_V_c_U->if_din(Block_proc_U0_outImage_cols_V_out_din);
    outImage_cols_V_c_U->if_full_n(outImage_cols_V_c_full_n);
    outImage_cols_V_c_U->if_write(Block_proc_U0_outImage_cols_V_out_write);
    outImage_cols_V_c_U->if_dout(outImage_cols_V_c_dout);
    outImage_cols_V_c_U->if_empty_n(outImage_cols_V_c_empty_n);
    outImage_cols_V_c_U->if_read(Resize_U0_p_dst_cols_V_read);
    inImage_data_stream_s_U = new fifo_w8_d2_A("inImage_data_stream_s_U");
    inImage_data_stream_s_U->clk(ap_clk);
    inImage_data_stream_s_U->reset(ap_rst_n_inv);
    inImage_data_stream_s_U->if_read_ce(ap_var_for_const0);
    inImage_data_stream_s_U->if_write_ce(ap_var_for_const0);
    inImage_data_stream_s_U->if_din(AXIvideo2Mat_U0_img_data_stream_V_din);
    inImage_data_stream_s_U->if_full_n(inImage_data_stream_s_full_n);
    inImage_data_stream_s_U->if_write(AXIvideo2Mat_U0_img_data_stream_V_write);
    inImage_data_stream_s_U->if_dout(inImage_data_stream_s_dout);
    inImage_data_stream_s_U->if_empty_n(inImage_data_stream_s_empty_n);
    inImage_data_stream_s_U->if_read(Resize_U0_p_src_data_stream_V_read);
    inImage_rows_V_c8_U = new fifo_w10_d2_A("inImage_rows_V_c8_U");
    inImage_rows_V_c8_U->clk(ap_clk);
    inImage_rows_V_c8_U->reset(ap_rst_n_inv);
    inImage_rows_V_c8_U->if_read_ce(ap_var_for_const0);
    inImage_rows_V_c8_U->if_write_ce(ap_var_for_const0);
    inImage_rows_V_c8_U->if_din(AXIvideo2Mat_U0_img_rows_V_out_din);
    inImage_rows_V_c8_U->if_full_n(inImage_rows_V_c8_full_n);
    inImage_rows_V_c8_U->if_write(AXIvideo2Mat_U0_img_rows_V_out_write);
    inImage_rows_V_c8_U->if_dout(inImage_rows_V_c8_dout);
    inImage_rows_V_c8_U->if_empty_n(inImage_rows_V_c8_empty_n);
    inImage_rows_V_c8_U->if_read(Resize_U0_p_src_rows_V_read);
    inImage_cols_V_c9_U = new fifo_w11_d2_A("inImage_cols_V_c9_U");
    inImage_cols_V_c9_U->clk(ap_clk);
    inImage_cols_V_c9_U->reset(ap_rst_n_inv);
    inImage_cols_V_c9_U->if_read_ce(ap_var_for_const0);
    inImage_cols_V_c9_U->if_write_ce(ap_var_for_const0);
    inImage_cols_V_c9_U->if_din(AXIvideo2Mat_U0_img_cols_V_out_din);
    inImage_cols_V_c9_U->if_full_n(inImage_cols_V_c9_full_n);
    inImage_cols_V_c9_U->if_write(AXIvideo2Mat_U0_img_cols_V_out_write);
    inImage_cols_V_c9_U->if_dout(inImage_cols_V_c9_dout);
    inImage_cols_V_c9_U->if_empty_n(inImage_cols_V_c9_empty_n);
    inImage_cols_V_c9_U->if_read(Resize_U0_p_src_cols_V_read);
    outImage_data_stream_U = new fifo_w8_d2_A("outImage_data_stream_U");
    outImage_data_stream_U->clk(ap_clk);
    outImage_data_stream_U->reset(ap_rst_n_inv);
    outImage_data_stream_U->if_read_ce(ap_var_for_const0);
    outImage_data_stream_U->if_write_ce(ap_var_for_const0);
    outImage_data_stream_U->if_din(Resize_U0_p_dst_data_stream_V_din);
    outImage_data_stream_U->if_full_n(outImage_data_stream_full_n);
    outImage_data_stream_U->if_write(Resize_U0_p_dst_data_stream_V_write);
    outImage_data_stream_U->if_dout(outImage_data_stream_dout);
    outImage_data_stream_U->if_empty_n(outImage_data_stream_empty_n);
    outImage_data_stream_U->if_read(Mat2AXIvideo_U0_img_data_stream_V_read);
    outImage_rows_V_c10_U = new fifo_w11_d2_A("outImage_rows_V_c10_U");
    outImage_rows_V_c10_U->clk(ap_clk);
    outImage_rows_V_c10_U->reset(ap_rst_n_inv);
    outImage_rows_V_c10_U->if_read_ce(ap_var_for_const0);
    outImage_rows_V_c10_U->if_write_ce(ap_var_for_const0);
    outImage_rows_V_c10_U->if_din(Resize_U0_p_dst_rows_V_out_din);
    outImage_rows_V_c10_U->if_full_n(outImage_rows_V_c10_full_n);
    outImage_rows_V_c10_U->if_write(Resize_U0_p_dst_rows_V_out_write);
    outImage_rows_V_c10_U->if_dout(outImage_rows_V_c10_dout);
    outImage_rows_V_c10_U->if_empty_n(outImage_rows_V_c10_empty_n);
    outImage_rows_V_c10_U->if_read(Mat2AXIvideo_U0_img_rows_V_read);
    outImage_cols_V_c11_U = new fifo_w11_d2_A("outImage_cols_V_c11_U");
    outImage_cols_V_c11_U->clk(ap_clk);
    outImage_cols_V_c11_U->reset(ap_rst_n_inv);
    outImage_cols_V_c11_U->if_read_ce(ap_var_for_const0);
    outImage_cols_V_c11_U->if_write_ce(ap_var_for_const0);
    outImage_cols_V_c11_U->if_din(Resize_U0_p_dst_cols_V_out_din);
    outImage_cols_V_c11_U->if_full_n(outImage_cols_V_c11_full_n);
    outImage_cols_V_c11_U->if_write(Resize_U0_p_dst_cols_V_out_write);
    outImage_cols_V_c11_U->if_dout(outImage_cols_V_c11_dout);
    outImage_cols_V_c11_U->if_empty_n(outImage_cols_V_c11_empty_n);
    outImage_cols_V_c11_U->if_read(Mat2AXIvideo_U0_img_cols_V_read);
    start_for_Resize_U0_U = new start_for_Resize_U0("start_for_Resize_U0_U");
    start_for_Resize_U0_U->clk(ap_clk);
    start_for_Resize_U0_U->reset(ap_rst_n_inv);
    start_for_Resize_U0_U->if_read_ce(ap_var_for_const0);
    start_for_Resize_U0_U->if_write_ce(ap_var_for_const0);
    start_for_Resize_U0_U->if_din(start_for_Resize_U0_din);
    start_for_Resize_U0_U->if_full_n(start_for_Resize_U0_full_n);
    start_for_Resize_U0_U->if_write(Block_proc_U0_start_write);
    start_for_Resize_U0_U->if_dout(start_for_Resize_U0_dout);
    start_for_Resize_U0_U->if_empty_n(start_for_Resize_U0_empty_n);
    start_for_Resize_U0_U->if_read(Resize_U0_ap_ready);
    start_for_Mat2AXIhbi_U = new start_for_Mat2AXIhbi("start_for_Mat2AXIhbi_U");
    start_for_Mat2AXIhbi_U->clk(ap_clk);
    start_for_Mat2AXIhbi_U->reset(ap_rst_n_inv);
    start_for_Mat2AXIhbi_U->if_read_ce(ap_var_for_const0);
    start_for_Mat2AXIhbi_U->if_write_ce(ap_var_for_const0);
    start_for_Mat2AXIhbi_U->if_din(start_for_Mat2AXIvideo_U0_din);
    start_for_Mat2AXIhbi_U->if_full_n(start_for_Mat2AXIvideo_U0_full_n);
    start_for_Mat2AXIhbi_U->if_write(Resize_U0_start_write);
    start_for_Mat2AXIhbi_U->if_dout(start_for_Mat2AXIvideo_U0_dout);
    start_for_Mat2AXIhbi_U->if_empty_n(start_for_Mat2AXIvideo_U0_empty_n);
    start_for_Mat2AXIhbi_U->if_read(Mat2AXIvideo_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_continue);

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_AXIvideo2Mat_U0_start_full_n);

    SC_METHOD(thread_AXIvideo2Mat_U0_start_write);

    SC_METHOD(thread_Block_proc_U0_ap_continue);

    SC_METHOD(thread_Block_proc_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Block_proc_U0_ap_ready );

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_continue);

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_start);
    sensitive << ( start_for_Mat2AXIvideo_U0_empty_n );

    SC_METHOD(thread_Mat2AXIvideo_U0_start_full_n);

    SC_METHOD(thread_Mat2AXIvideo_U0_start_write);

    SC_METHOD(thread_Resize_U0_ap_continue);

    SC_METHOD(thread_Resize_U0_ap_start);
    sensitive << ( start_for_Resize_U0_empty_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( Block_proc_U0_ap_idle );
    sensitive << ( AXIvideo2Mat_U0_ap_idle );
    sensitive << ( Resize_U0_ap_idle );
    sensitive << ( Mat2AXIvideo_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_AXIvideo2Mat_U0_ap_ready);
    sensitive << ( AXIvideo2Mat_U0_ap_ready );
    sensitive << ( ap_sync_reg_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_ap_sync_Block_proc_U0_ap_ready);
    sensitive << ( Block_proc_U0_ap_ready );
    sensitive << ( ap_sync_reg_Block_proc_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_Block_proc_U0_ap_ready );
    sensitive << ( ap_sync_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_inStream_TREADY);
    sensitive << ( AXIvideo2Mat_U0_inStream_TREADY );

    SC_METHOD(thread_outStream_TDATA);
    sensitive << ( Mat2AXIvideo_U0_outStream_TDATA );

    SC_METHOD(thread_outStream_TDEST);
    sensitive << ( Mat2AXIvideo_U0_outStream_TDEST );

    SC_METHOD(thread_outStream_TID);
    sensitive << ( Mat2AXIvideo_U0_outStream_TID );

    SC_METHOD(thread_outStream_TKEEP);
    sensitive << ( Mat2AXIvideo_U0_outStream_TKEEP );

    SC_METHOD(thread_outStream_TLAST);
    sensitive << ( Mat2AXIvideo_U0_outStream_TLAST );

    SC_METHOD(thread_outStream_TSTRB);
    sensitive << ( Mat2AXIvideo_U0_outStream_TSTRB );

    SC_METHOD(thread_outStream_TUSER);
    sensitive << ( Mat2AXIvideo_U0_outStream_TUSER );

    SC_METHOD(thread_outStream_TVALID);
    sensitive << ( Mat2AXIvideo_U0_outStream_TVALID );

    SC_METHOD(thread_start_for_Mat2AXIvideo_U0_din);

    SC_METHOD(thread_start_for_Resize_U0_din);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_sync_reg_Block_proc_U0_ap_ready = SC_LOGIC_0;
    Block_proc_U0_ap_ready_count = "00";
    ap_sync_reg_AXIvideo2Mat_U0_ap_ready = SC_LOGIC_0;
    AXIvideo2Mat_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "scaleImage_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, inStream_TDATA, "(port)inStream_TDATA");
    sc_trace(mVcdFile, inStream_TKEEP, "(port)inStream_TKEEP");
    sc_trace(mVcdFile, inStream_TSTRB, "(port)inStream_TSTRB");
    sc_trace(mVcdFile, inStream_TUSER, "(port)inStream_TUSER");
    sc_trace(mVcdFile, inStream_TLAST, "(port)inStream_TLAST");
    sc_trace(mVcdFile, inStream_TID, "(port)inStream_TID");
    sc_trace(mVcdFile, inStream_TDEST, "(port)inStream_TDEST");
    sc_trace(mVcdFile, outStream_TDATA, "(port)outStream_TDATA");
    sc_trace(mVcdFile, outStream_TKEEP, "(port)outStream_TKEEP");
    sc_trace(mVcdFile, outStream_TSTRB, "(port)outStream_TSTRB");
    sc_trace(mVcdFile, outStream_TUSER, "(port)outStream_TUSER");
    sc_trace(mVcdFile, outStream_TLAST, "(port)outStream_TLAST");
    sc_trace(mVcdFile, outStream_TID, "(port)outStream_TID");
    sc_trace(mVcdFile, outStream_TDEST, "(port)outStream_TDEST");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, inStream_TVALID, "(port)inStream_TVALID");
    sc_trace(mVcdFile, inStream_TREADY, "(port)inStream_TREADY");
    sc_trace(mVcdFile, outStream_TVALID, "(port)outStream_TVALID");
    sc_trace(mVcdFile, outStream_TREADY, "(port)outStream_TREADY");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, Block_proc_U0_ap_start, "Block_proc_U0_ap_start");
    sc_trace(mVcdFile, Block_proc_U0_ap_done, "Block_proc_U0_ap_done");
    sc_trace(mVcdFile, Block_proc_U0_ap_continue, "Block_proc_U0_ap_continue");
    sc_trace(mVcdFile, Block_proc_U0_ap_idle, "Block_proc_U0_ap_idle");
    sc_trace(mVcdFile, Block_proc_U0_ap_ready, "Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc_U0_start_out, "Block_proc_U0_start_out");
    sc_trace(mVcdFile, Block_proc_U0_start_write, "Block_proc_U0_start_write");
    sc_trace(mVcdFile, Block_proc_U0_inImage_rows_V_out_din, "Block_proc_U0_inImage_rows_V_out_din");
    sc_trace(mVcdFile, Block_proc_U0_inImage_rows_V_out_write, "Block_proc_U0_inImage_rows_V_out_write");
    sc_trace(mVcdFile, Block_proc_U0_inImage_cols_V_out_din, "Block_proc_U0_inImage_cols_V_out_din");
    sc_trace(mVcdFile, Block_proc_U0_inImage_cols_V_out_write, "Block_proc_U0_inImage_cols_V_out_write");
    sc_trace(mVcdFile, Block_proc_U0_outImage_rows_V_out_din, "Block_proc_U0_outImage_rows_V_out_din");
    sc_trace(mVcdFile, Block_proc_U0_outImage_rows_V_out_write, "Block_proc_U0_outImage_rows_V_out_write");
    sc_trace(mVcdFile, Block_proc_U0_outImage_cols_V_out_din, "Block_proc_U0_outImage_cols_V_out_din");
    sc_trace(mVcdFile, Block_proc_U0_outImage_cols_V_out_write, "Block_proc_U0_outImage_cols_V_out_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_start, "AXIvideo2Mat_U0_ap_start");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_done, "AXIvideo2Mat_U0_ap_done");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_continue, "AXIvideo2Mat_U0_ap_continue");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_idle, "AXIvideo2Mat_U0_ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready, "AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_inStream_TREADY, "AXIvideo2Mat_U0_inStream_TREADY");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_read, "AXIvideo2Mat_U0_img_rows_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_read, "AXIvideo2Mat_U0_img_cols_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_V_din, "AXIvideo2Mat_U0_img_data_stream_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_V_write, "AXIvideo2Mat_U0_img_data_stream_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_out_din, "AXIvideo2Mat_U0_img_rows_V_out_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_out_write, "AXIvideo2Mat_U0_img_rows_V_out_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_out_din, "AXIvideo2Mat_U0_img_cols_V_out_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_out_write, "AXIvideo2Mat_U0_img_cols_V_out_write");
    sc_trace(mVcdFile, Resize_U0_ap_start, "Resize_U0_ap_start");
    sc_trace(mVcdFile, Resize_U0_ap_done, "Resize_U0_ap_done");
    sc_trace(mVcdFile, Resize_U0_ap_continue, "Resize_U0_ap_continue");
    sc_trace(mVcdFile, Resize_U0_ap_idle, "Resize_U0_ap_idle");
    sc_trace(mVcdFile, Resize_U0_ap_ready, "Resize_U0_ap_ready");
    sc_trace(mVcdFile, Resize_U0_start_out, "Resize_U0_start_out");
    sc_trace(mVcdFile, Resize_U0_start_write, "Resize_U0_start_write");
    sc_trace(mVcdFile, Resize_U0_p_src_rows_V_read, "Resize_U0_p_src_rows_V_read");
    sc_trace(mVcdFile, Resize_U0_p_src_cols_V_read, "Resize_U0_p_src_cols_V_read");
    sc_trace(mVcdFile, Resize_U0_p_src_data_stream_V_read, "Resize_U0_p_src_data_stream_V_read");
    sc_trace(mVcdFile, Resize_U0_p_dst_rows_V_read, "Resize_U0_p_dst_rows_V_read");
    sc_trace(mVcdFile, Resize_U0_p_dst_cols_V_read, "Resize_U0_p_dst_cols_V_read");
    sc_trace(mVcdFile, Resize_U0_p_dst_data_stream_V_din, "Resize_U0_p_dst_data_stream_V_din");
    sc_trace(mVcdFile, Resize_U0_p_dst_data_stream_V_write, "Resize_U0_p_dst_data_stream_V_write");
    sc_trace(mVcdFile, Resize_U0_p_dst_rows_V_out_din, "Resize_U0_p_dst_rows_V_out_din");
    sc_trace(mVcdFile, Resize_U0_p_dst_rows_V_out_write, "Resize_U0_p_dst_rows_V_out_write");
    sc_trace(mVcdFile, Resize_U0_p_dst_cols_V_out_din, "Resize_U0_p_dst_cols_V_out_din");
    sc_trace(mVcdFile, Resize_U0_p_dst_cols_V_out_write, "Resize_U0_p_dst_cols_V_out_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_start, "Mat2AXIvideo_U0_ap_start");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_done, "Mat2AXIvideo_U0_ap_done");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_continue, "Mat2AXIvideo_U0_ap_continue");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_idle, "Mat2AXIvideo_U0_ap_idle");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_ready, "Mat2AXIvideo_U0_ap_ready");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_rows_V_read, "Mat2AXIvideo_U0_img_rows_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_cols_V_read, "Mat2AXIvideo_U0_img_cols_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_V_read, "Mat2AXIvideo_U0_img_data_stream_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outStream_TDATA, "Mat2AXIvideo_U0_outStream_TDATA");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outStream_TVALID, "Mat2AXIvideo_U0_outStream_TVALID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outStream_TKEEP, "Mat2AXIvideo_U0_outStream_TKEEP");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outStream_TSTRB, "Mat2AXIvideo_U0_outStream_TSTRB");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outStream_TUSER, "Mat2AXIvideo_U0_outStream_TUSER");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outStream_TLAST, "Mat2AXIvideo_U0_outStream_TLAST");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outStream_TID, "Mat2AXIvideo_U0_outStream_TID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outStream_TDEST, "Mat2AXIvideo_U0_outStream_TDEST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, inImage_rows_V_c_full_n, "inImage_rows_V_c_full_n");
    sc_trace(mVcdFile, inImage_rows_V_c_dout, "inImage_rows_V_c_dout");
    sc_trace(mVcdFile, inImage_rows_V_c_empty_n, "inImage_rows_V_c_empty_n");
    sc_trace(mVcdFile, inImage_cols_V_c_full_n, "inImage_cols_V_c_full_n");
    sc_trace(mVcdFile, inImage_cols_V_c_dout, "inImage_cols_V_c_dout");
    sc_trace(mVcdFile, inImage_cols_V_c_empty_n, "inImage_cols_V_c_empty_n");
    sc_trace(mVcdFile, outImage_rows_V_c_full_n, "outImage_rows_V_c_full_n");
    sc_trace(mVcdFile, outImage_rows_V_c_dout, "outImage_rows_V_c_dout");
    sc_trace(mVcdFile, outImage_rows_V_c_empty_n, "outImage_rows_V_c_empty_n");
    sc_trace(mVcdFile, outImage_cols_V_c_full_n, "outImage_cols_V_c_full_n");
    sc_trace(mVcdFile, outImage_cols_V_c_dout, "outImage_cols_V_c_dout");
    sc_trace(mVcdFile, outImage_cols_V_c_empty_n, "outImage_cols_V_c_empty_n");
    sc_trace(mVcdFile, inImage_data_stream_s_full_n, "inImage_data_stream_s_full_n");
    sc_trace(mVcdFile, inImage_data_stream_s_dout, "inImage_data_stream_s_dout");
    sc_trace(mVcdFile, inImage_data_stream_s_empty_n, "inImage_data_stream_s_empty_n");
    sc_trace(mVcdFile, inImage_rows_V_c8_full_n, "inImage_rows_V_c8_full_n");
    sc_trace(mVcdFile, inImage_rows_V_c8_dout, "inImage_rows_V_c8_dout");
    sc_trace(mVcdFile, inImage_rows_V_c8_empty_n, "inImage_rows_V_c8_empty_n");
    sc_trace(mVcdFile, inImage_cols_V_c9_full_n, "inImage_cols_V_c9_full_n");
    sc_trace(mVcdFile, inImage_cols_V_c9_dout, "inImage_cols_V_c9_dout");
    sc_trace(mVcdFile, inImage_cols_V_c9_empty_n, "inImage_cols_V_c9_empty_n");
    sc_trace(mVcdFile, outImage_data_stream_full_n, "outImage_data_stream_full_n");
    sc_trace(mVcdFile, outImage_data_stream_dout, "outImage_data_stream_dout");
    sc_trace(mVcdFile, outImage_data_stream_empty_n, "outImage_data_stream_empty_n");
    sc_trace(mVcdFile, outImage_rows_V_c10_full_n, "outImage_rows_V_c10_full_n");
    sc_trace(mVcdFile, outImage_rows_V_c10_dout, "outImage_rows_V_c10_dout");
    sc_trace(mVcdFile, outImage_rows_V_c10_empty_n, "outImage_rows_V_c10_empty_n");
    sc_trace(mVcdFile, outImage_cols_V_c11_full_n, "outImage_cols_V_c11_full_n");
    sc_trace(mVcdFile, outImage_cols_V_c11_dout, "outImage_cols_V_c11_dout");
    sc_trace(mVcdFile, outImage_cols_V_c11_empty_n, "outImage_cols_V_c11_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_Block_proc_U0_ap_ready, "ap_sync_reg_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Block_proc_U0_ap_ready, "ap_sync_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc_U0_ap_ready_count, "Block_proc_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_AXIvideo2Mat_U0_ap_ready, "ap_sync_reg_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_AXIvideo2Mat_U0_ap_ready, "ap_sync_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready_count, "AXIvideo2Mat_U0_ap_ready_count");
    sc_trace(mVcdFile, start_for_Resize_U0_din, "start_for_Resize_U0_din");
    sc_trace(mVcdFile, start_for_Resize_U0_full_n, "start_for_Resize_U0_full_n");
    sc_trace(mVcdFile, start_for_Resize_U0_dout, "start_for_Resize_U0_dout");
    sc_trace(mVcdFile, start_for_Resize_U0_empty_n, "start_for_Resize_U0_empty_n");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_full_n, "AXIvideo2Mat_U0_start_full_n");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_write, "AXIvideo2Mat_U0_start_write");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_din, "start_for_Mat2AXIvideo_U0_din");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_full_n, "start_for_Mat2AXIvideo_U0_full_n");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_dout, "start_for_Mat2AXIvideo_U0_dout");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_empty_n, "start_for_Mat2AXIvideo_U0_empty_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_full_n, "Mat2AXIvideo_U0_start_full_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_write, "Mat2AXIvideo_U0_start_write");
#endif

    }
    mHdltvinHandle.open("scaleImage.hdltvin.dat");
    mHdltvoutHandle.open("scaleImage.hdltvout.dat");
}

scaleImage::~scaleImage() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Block_proc_U0;
    delete AXIvideo2Mat_U0;
    delete Resize_U0;
    delete Mat2AXIvideo_U0;
    delete inImage_rows_V_c_U;
    delete inImage_cols_V_c_U;
    delete outImage_rows_V_c_U;
    delete outImage_cols_V_c_U;
    delete inImage_data_stream_s_U;
    delete inImage_rows_V_c8_U;
    delete inImage_cols_V_c9_U;
    delete outImage_data_stream_U;
    delete outImage_rows_V_c10_U;
    delete outImage_cols_V_c11_U;
    delete start_for_Resize_U0_U;
    delete start_for_Mat2AXIhbi_U;
}

void scaleImage::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void scaleImage::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(AXIvideo2Mat_U0_ap_ready.read(), ap_const_logic_0))) {
        AXIvideo2Mat_U0_ap_ready_count = (!AXIvideo2Mat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2Mat_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_sync_ready.read(), ap_const_logic_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, AXIvideo2Mat_U0_ap_ready.read()))) {
        AXIvideo2Mat_U0_ap_ready_count = (!AXIvideo2Mat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2Mat_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(Block_proc_U0_ap_ready.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        Block_proc_U0_ap_ready_count = (!Block_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_proc_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(Block_proc_U0_ap_ready.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_sync_ready.read(), ap_const_logic_0))) {
        Block_proc_U0_ap_ready_count = (!Block_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_proc_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_sync_AXIvideo2Mat_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_Block_proc_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Block_proc_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Block_proc_U0_ap_ready = ap_sync_Block_proc_U0_ap_ready.read();
        }
    }
}

void scaleImage::thread_AXIvideo2Mat_U0_ap_continue() {
    AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
}

void scaleImage::thread_AXIvideo2Mat_U0_ap_start() {
    AXIvideo2Mat_U0_ap_start = (ap_start.read() & (ap_sync_reg_AXIvideo2Mat_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void scaleImage::thread_AXIvideo2Mat_U0_start_full_n() {
    AXIvideo2Mat_U0_start_full_n = ap_const_logic_1;
}

void scaleImage::thread_AXIvideo2Mat_U0_start_write() {
    AXIvideo2Mat_U0_start_write = ap_const_logic_0;
}

void scaleImage::thread_Block_proc_U0_ap_continue() {
    Block_proc_U0_ap_continue = ap_const_logic_1;
}

void scaleImage::thread_Block_proc_U0_ap_start() {
    Block_proc_U0_ap_start = (ap_start.read() & (ap_sync_reg_Block_proc_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void scaleImage::thread_Mat2AXIvideo_U0_ap_continue() {
    Mat2AXIvideo_U0_ap_continue = ap_const_logic_1;
}

void scaleImage::thread_Mat2AXIvideo_U0_ap_start() {
    Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n.read();
}

void scaleImage::thread_Mat2AXIvideo_U0_start_full_n() {
    Mat2AXIvideo_U0_start_full_n = ap_const_logic_1;
}

void scaleImage::thread_Mat2AXIvideo_U0_start_write() {
    Mat2AXIvideo_U0_start_write = ap_const_logic_0;
}

void scaleImage::thread_Resize_U0_ap_continue() {
    Resize_U0_ap_continue = ap_const_logic_1;
}

void scaleImage::thread_Resize_U0_ap_start() {
    Resize_U0_ap_start = start_for_Resize_U0_empty_n.read();
}

void scaleImage::thread_ap_done() {
    ap_done = Mat2AXIvideo_U0_ap_done.read();
}

void scaleImage::thread_ap_idle() {
    ap_idle = (Block_proc_U0_ap_idle.read() & AXIvideo2Mat_U0_ap_idle.read() & Resize_U0_ap_idle.read() & Mat2AXIvideo_U0_ap_idle.read());
}

void scaleImage::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void scaleImage::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void scaleImage::thread_ap_sync_AXIvideo2Mat_U0_ap_ready() {
    ap_sync_AXIvideo2Mat_U0_ap_ready = (AXIvideo2Mat_U0_ap_ready.read() | ap_sync_reg_AXIvideo2Mat_U0_ap_ready.read());
}

void scaleImage::thread_ap_sync_Block_proc_U0_ap_ready() {
    ap_sync_Block_proc_U0_ap_ready = (Block_proc_U0_ap_ready.read() | ap_sync_reg_Block_proc_U0_ap_ready.read());
}

void scaleImage::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void scaleImage::thread_ap_sync_done() {
    ap_sync_done = Mat2AXIvideo_U0_ap_done.read();
}

void scaleImage::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_Block_proc_U0_ap_ready.read() & ap_sync_AXIvideo2Mat_U0_ap_ready.read());
}

void scaleImage::thread_inStream_TREADY() {
    inStream_TREADY = AXIvideo2Mat_U0_inStream_TREADY.read();
}

void scaleImage::thread_outStream_TDATA() {
    outStream_TDATA = Mat2AXIvideo_U0_outStream_TDATA.read();
}

void scaleImage::thread_outStream_TDEST() {
    outStream_TDEST = Mat2AXIvideo_U0_outStream_TDEST.read();
}

void scaleImage::thread_outStream_TID() {
    outStream_TID = Mat2AXIvideo_U0_outStream_TID.read();
}

void scaleImage::thread_outStream_TKEEP() {
    outStream_TKEEP = Mat2AXIvideo_U0_outStream_TKEEP.read();
}

void scaleImage::thread_outStream_TLAST() {
    outStream_TLAST = Mat2AXIvideo_U0_outStream_TLAST.read();
}

void scaleImage::thread_outStream_TSTRB() {
    outStream_TSTRB = Mat2AXIvideo_U0_outStream_TSTRB.read();
}

void scaleImage::thread_outStream_TUSER() {
    outStream_TUSER = Mat2AXIvideo_U0_outStream_TUSER.read();
}

void scaleImage::thread_outStream_TVALID() {
    outStream_TVALID = Mat2AXIvideo_U0_outStream_TVALID.read();
}

void scaleImage::thread_start_for_Mat2AXIvideo_U0_din() {
    start_for_Mat2AXIvideo_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void scaleImage::thread_start_for_Resize_U0_din() {
    start_for_Resize_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void scaleImage::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"inStream_TDATA\" :  \"" << inStream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TKEEP\" :  \"" << inStream_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TSTRB\" :  \"" << inStream_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TUSER\" :  \"" << inStream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TLAST\" :  \"" << inStream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TID\" :  \"" << inStream_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TDEST\" :  \"" << inStream_TDEST.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"outStream_TDATA\" :  \"" << outStream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TKEEP\" :  \"" << outStream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TSTRB\" :  \"" << outStream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TUSER\" :  \"" << outStream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TLAST\" :  \"" << outStream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TID\" :  \"" << outStream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TDEST\" :  \"" << outStream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inStream_TVALID\" :  \"" << inStream_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inStream_TREADY\" :  \"" << inStream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outStream_TVALID\" :  \"" << outStream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outStream_TREADY\" :  \"" << outStream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

