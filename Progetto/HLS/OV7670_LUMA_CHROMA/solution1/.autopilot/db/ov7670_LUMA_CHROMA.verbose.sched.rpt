

================================================================
== Vivado HLS Report for 'ov7670_LUMA_CHROMA'
================================================================
* Date:           Tue Apr 12 15:55:59 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        OV7670_LUMA_CHROMA
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  25.00|     0.978|        3.12|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    2|    2|    2|    2|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 3 2 
2 --> 4 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %inStream_V_V), !map !25"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %outStream_grayscale_V_V), !map !31"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %enable_raw_stream), !map !35"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %outStream_LUMA_V_V), !map !41"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %outStream_CHROMA_V_V), !map !45"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @ov7670_LUMA_CHROMA_s) nounwind"   --->   Operation 10 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%enable_raw_stream_re = call i1 @_ssdm_op_Read.ap_none.i1(i1 %enable_raw_stream)"   --->   Operation 11 'read' 'enable_raw_stream_re' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %enable_raw_stream, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:5]   --->   Operation 12 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %inStream_V_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:6]   --->   Operation 13 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %outStream_grayscale_V_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:7]   --->   Operation 14 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %outStream_LUMA_V_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:8]   --->   Operation 15 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %outStream_CHROMA_V_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:9]   --->   Operation 16 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @grayscale_valid, i32 1, [1 x i8]* @p_str1) nounwind" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:12]   --->   Operation 17 'specreset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_V = call i8 @_ssdm_op_Read.axis.volatile.i8P(i8* %inStream_V_V)" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:15]   --->   Operation 18 'read' 'tmp_V' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%grayscale_valid_load = load i1* @grayscale_valid, align 1" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:16]   --->   Operation 19 'load' 'grayscale_valid_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "br i1 %grayscale_valid_load, label %1, label %3" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:16]   --->   Operation 20 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %enable_raw_stream_re, label %4, label %._crit_edge17" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:26]   --->   Operation 21 'br' <Predicate = (!grayscale_valid_load)> <Delay = 0.00>
ST_1 : Operation 22 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_CHROMA_V_V, i8 %tmp_V)" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:27]   --->   Operation 22 'write' <Predicate = (!grayscale_valid_load & enable_raw_stream_re)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 23 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_grayscale_V_V, i8 %tmp_V)" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:18]   --->   Operation 23 'write' <Predicate = (grayscale_valid_load)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 24 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_CHROMA_V_V, i8 %tmp_V)" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:27]   --->   Operation 24 'write' <Predicate = (enable_raw_stream_re)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "br label %._crit_edge17" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:27]   --->   Operation 25 'br' <Predicate = (enable_raw_stream_re)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "br label %5"   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>

State 3 <SV = 1> <Delay = 0.00>
ST_3 : Operation 27 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_grayscale_V_V, i8 %tmp_V)" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:18]   --->   Operation 27 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %enable_raw_stream_re, label %2, label %._crit_edge" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:20]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_LUMA_V_V, i8 %tmp_V)" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:21]   --->   Operation 29 'write' <Predicate = (enable_raw_stream_re)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 4 <SV = 2> <Delay = 0.97>
ST_4 : Operation 30 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P(i8* %outStream_LUMA_V_V, i8 %tmp_V)" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:21]   --->   Operation 30 'write' <Predicate = (grayscale_valid_load & enable_raw_stream_re)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "br label %._crit_edge" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:21]   --->   Operation 31 'br' <Predicate = (grayscale_valid_load & enable_raw_stream_re)> <Delay = 0.00>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "br label %5" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:23]   --->   Operation 32 'br' <Predicate = (grayscale_valid_load)> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.97ns)   --->   "%xor_ln30 = xor i1 %grayscale_valid_load, true" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:30]   --->   Operation 33 'xor' 'xor_ln30' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "store i1 %xor_ln30, i1* @grayscale_valid, align 1" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:30]   --->   Operation 34 'store' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "ret void" [OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:32]   --->   Operation 35 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 25ns, clock uncertainty: 3.12ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0.978ns
The critical path consists of the following:
	'xor' operation ('xor_ln30', OV7670_LUMA_CHROMA/ov7670_LUMA_CHROMA.cpp:30) [39]  (0.978 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
