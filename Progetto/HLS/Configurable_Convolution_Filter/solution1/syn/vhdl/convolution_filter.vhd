-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolution_filter is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_img_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    in_img_V_TVALID : IN STD_LOGIC;
    in_img_V_TREADY : OUT STD_LOGIC;
    out_img_V_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_img_V_TVALID : OUT STD_LOGIC;
    out_img_V_TREADY : IN STD_LOGIC;
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of convolution_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "convolution_filter,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=12.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.210000,HLS_SYN_LAT=310601,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=32,HLS_SYN_FF=3080,HLS_SYN_LUT=3139,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv64_31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110001";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv19_4BD29 : STD_LOGIC_VECTOR (18 downto 0) := "1001011110100101001";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv19_283 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001010000011";
    constant ap_const_lv10_283 : STD_LOGIC_VECTOR (9 downto 0) := "1010000011";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv19_31 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000110001";
    constant ap_const_lv19_32 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000110010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_config_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernel_config_V_ce0 : STD_LOGIC;
    signal kernel_config_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal in_img_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal in_img_V_0_vld_in : STD_LOGIC;
    signal in_img_V_0_vld_out : STD_LOGIC;
    signal in_img_V_0_ack_in : STD_LOGIC;
    signal in_img_V_0_ack_out : STD_LOGIC;
    signal in_img_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal in_img_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal in_img_V_0_sel_rd : STD_LOGIC := '0';
    signal in_img_V_0_sel_wr : STD_LOGIC := '0';
    signal in_img_V_0_sel : STD_LOGIC;
    signal in_img_V_0_load_A : STD_LOGIC;
    signal in_img_V_0_load_B : STD_LOGIC;
    signal in_img_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_img_V_0_state_cmp_full : STD_LOGIC;
    signal out_img_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal out_img_V_1_vld_in : STD_LOGIC;
    signal out_img_V_1_vld_out : STD_LOGIC;
    signal out_img_V_1_ack_in : STD_LOGIC;
    signal out_img_V_1_ack_out : STD_LOGIC;
    signal out_img_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal out_img_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal out_img_V_1_sel_rd : STD_LOGIC := '0';
    signal out_img_V_1_sel_wr : STD_LOGIC := '0';
    signal out_img_V_1_sel : STD_LOGIC;
    signal out_img_V_1_load_A : STD_LOGIC;
    signal out_img_V_1_load_B : STD_LOGIC;
    signal out_img_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_img_V_1_state_cmp_full : STD_LOGIC;
    signal window_V_0_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_sum_V : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    signal kernel_off_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_0_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_0_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_0_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_0_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_0_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_1_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_2_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_3_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_4_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_5_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_V_6_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal line_buffer_V_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_0_ce0 : STD_LOGIC;
    signal line_buffer_V_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_0_ce1 : STD_LOGIC;
    signal line_buffer_V_0_we1 : STD_LOGIC;
    signal line_buffer_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_ce0 : STD_LOGIC;
    signal line_buffer_V_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_1_ce1 : STD_LOGIC;
    signal line_buffer_V_1_we1 : STD_LOGIC;
    signal line_buffer_V_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_2_ce0 : STD_LOGIC;
    signal line_buffer_V_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_2_ce1 : STD_LOGIC;
    signal line_buffer_V_2_we1 : STD_LOGIC;
    signal line_buffer_V_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_3_ce0 : STD_LOGIC;
    signal line_buffer_V_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_3_ce1 : STD_LOGIC;
    signal line_buffer_V_3_we1 : STD_LOGIC;
    signal line_buffer_V_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_4_ce0 : STD_LOGIC;
    signal line_buffer_V_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_4_ce1 : STD_LOGIC;
    signal line_buffer_V_4_we1 : STD_LOGIC;
    signal line_buffer_V_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_5_ce0 : STD_LOGIC;
    signal line_buffer_V_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_5_ce1 : STD_LOGIC;
    signal line_buffer_V_5_we1 : STD_LOGIC;
    signal kernel_V_0_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_0_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_0_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_0_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_0_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_0_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_0_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_1_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_1_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_1_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_1_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_1_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_1_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_1_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_2_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_2_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_2_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_2_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_2_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_2_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_2_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_3_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_3_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_3_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_3_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_3_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_3_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_3_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_4_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_4_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_4_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_4_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_4_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_4_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_4_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_5_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_5_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_5_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_5_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_5_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_5_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_5_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_6_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_6_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_6_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_6_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_6_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_6_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal kernel_V_6_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal in_img_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln116_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln156_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_img_V_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal and_ln164_reg_3124 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal and_ln164_reg_3124_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_503 : STD_LOGIC_VECTOR (18 downto 0);
    signal iteration_0_reg_514 : STD_LOGIC_VECTOR (18 downto 0);
    signal row_0_reg_525 : STD_LOGIC_VECTOR (8 downto 0);
    signal iteration_1_reg_536 : STD_LOGIC_VECTOR (18 downto 0);
    signal col_0_reg_547 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln116_reg_3026 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op154_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state32_io : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state33_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln116_fu_637_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal select_ln156_1_fu_663_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln156_1_reg_3035 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln116_fu_717_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal select_ln116_1_fu_725_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln123_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln123_reg_3050 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln133_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln133_reg_3054 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln135_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln135_reg_3058 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln180_fu_790_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln180_reg_3067 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln180_1_fu_794_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln180_1_reg_3071 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln145_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln145_reg_3075 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_0_addr_reg_3079 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_1_addr_reg_3085 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_2_addr_reg_3091 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_3_addr_reg_3097 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buffer_V_4_addr_reg_3103 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln156_reg_3114 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_temp_V_reg_3118 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln164_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln164_reg_3124_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln171_fu_854_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal col_fu_860_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal in_temp_V_1_load_reg_3138 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_5_6_loc_1_l_reg_3144 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_4_6_loc_1_l_reg_3150 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_3_6_loc_1_l_reg_3156 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_2_6_loc_1_l_reg_3162 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_1_6_loc_1_l_reg_3168 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_0_6_loc_1_l_reg_3174 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_sum_V_load_reg_3180 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_sum_V_load_reg_3180_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter21_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter22_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter25_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter26_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter27_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter28_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_off_V_load_reg_3185_pp0_iter29_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2668_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_1_reg_3190 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_fu_2685_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_3_reg_3195 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2702_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_6_reg_3200 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2719_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_8_reg_3205 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2736_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_12_reg_3210 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2753_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_14_reg_3215 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2770_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_17_reg_3220 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2787_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_19_reg_3225 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2804_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_24_reg_3230 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2821_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_26_reg_3235 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2838_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_29_reg_3240 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2855_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_31_reg_3245 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2872_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_35_reg_3250 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2889_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_37_reg_3255 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2906_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_40_reg_3260 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_43_fu_2446_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_43_reg_3265 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln68_47_fu_2640_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln68_47_reg_3270 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln647_fu_2662_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal zext_ln130_fu_785_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_fu_820_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln160_fu_1259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_1_fu_306 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln125_1_fu_777_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln131_fu_798_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_temp_V_1_fu_314 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_5_6_loc_1_fu_318 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_4_6_loc_1_fu_322 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_3_6_loc_1_fu_326 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_2_6_loc_1_fu_330 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_1_6_loc_1_fu_334 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_V_0_6_loc_1_fu_338 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_49_fu_2380_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln117_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln117_fu_643_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln116_1_fu_671_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln156_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln156_1_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln164_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln164_2_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln156_fu_655_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal icmp_ln125_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln128_fu_763_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln125_fu_769_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln156_2_fu_689_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln156_3_fu_709_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln164_1_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_V_3_fu_1675_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_3_fu_1675_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_3_fu_1675_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_6_fu_1720_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_6_fu_1720_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_6_fu_1720_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_9_fu_1766_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_9_fu_1766_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_9_fu_1766_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_12_fu_1812_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_12_fu_1812_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_12_fu_1812_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_15_fu_1857_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_15_fu_1857_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_15_fu_1857_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_18_fu_1903_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_18_fu_1903_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_18_fu_1903_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_21_fu_1948_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_21_fu_1948_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_21_fu_1948_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_24_fu_1994_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_24_fu_1994_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_24_fu_1994_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_27_fu_2039_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_27_fu_2039_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_27_fu_2039_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_30_fu_2085_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_30_fu_2085_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_30_fu_2085_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_33_fu_2131_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_33_fu_2131_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_33_fu_2131_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_36_fu_2176_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_36_fu_2176_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_36_fu_2176_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_39_fu_2222_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_39_fu_2222_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_39_fu_2222_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_42_fu_2267_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_42_fu_2267_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_42_fu_2267_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_45_fu_2313_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_45_fu_2313_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_45_fu_2313_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_47_fu_2347_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_47_fu_2347_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_47_fu_2347_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_49_fu_2380_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_49_fu_2380_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2676_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2693_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2710_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2727_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2744_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2761_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2778_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2795_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2812_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2829_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2846_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2863_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2880_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2897_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2914_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2923_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_2932_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln68_42_fu_2440_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_43_fu_2443_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_2_fu_2452_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_4_fu_2455_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln68_4_fu_2458_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_7_fu_2468_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_9_fu_2471_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln68_9_fu_2474_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_5_fu_2464_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln68_10_fu_2480_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln68_10_fu_2484_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln68_13_fu_2494_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_15_fu_2497_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln68_15_fu_2500_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_18_fu_2510_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_20_fu_2513_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln68_20_fu_2516_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_16_fu_2506_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln68_21_fu_2522_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln68_21_fu_2526_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln68_11_fu_2490_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln68_22_fu_2532_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln68_22_fu_2536_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln68_25_fu_2546_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_27_fu_2549_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln68_27_fu_2552_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_30_fu_2562_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_32_fu_2565_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln68_32_fu_2568_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_28_fu_2558_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln68_33_fu_2574_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln68_33_fu_2578_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln68_36_fu_2588_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_38_fu_2591_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln68_38_fu_2594_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_41_fu_2604_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_44_fu_2607_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln68_44_fu_2610_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln68_39_fu_2600_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln68_45_fu_2616_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln68_45_fu_2620_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln68_34_fu_2584_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln68_46_fu_2626_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln68_46_fu_2630_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln68_23_fu_2542_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln68_47_fu_2636_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2652_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_2652_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_fu_2658_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2668_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2676_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2685_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2693_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2702_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2710_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2719_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2727_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2736_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2744_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2753_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2761_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2770_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2778_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2787_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2795_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2804_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2812_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2821_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2829_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2838_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2846_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2855_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2863_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2872_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2880_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2889_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2897_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2906_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2914_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2923_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2932_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2652_ce : STD_LOGIC;
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_block_state34 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_2668_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2676_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2685_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2693_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2702_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2710_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2719_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2727_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2736_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2744_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2753_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2761_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2770_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2778_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2787_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2795_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2804_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2812_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2821_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2829_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2838_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2846_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2855_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2863_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2872_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2880_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2889_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2897_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2906_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2914_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2923_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2932_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_12_fu_1812_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_15_fu_1857_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_18_fu_1903_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_21_fu_1948_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_24_fu_1994_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_27_fu_2039_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_30_fu_2085_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_33_fu_2131_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_36_fu_2176_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_39_fu_2222_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_3_fu_1675_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_42_fu_2267_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_45_fu_2313_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_47_fu_2347_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_49_fu_2380_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_6_fu_1720_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_9_fu_1766_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_condition_2386 : BOOLEAN;
    signal ap_condition_2384 : BOOLEAN;

    component convolution_filtehbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (22 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component convolution_filteibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component convolution_filtejbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component convolution_filtebkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component convolution_filter_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        kernel_config_V_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        kernel_config_V_ce0 : IN STD_LOGIC;
        kernel_config_V_q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    line_buffer_V_0_U : component convolution_filtebkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_0_address0,
        ce0 => line_buffer_V_0_ce0,
        q0 => line_buffer_V_0_q0,
        address1 => line_buffer_V_0_addr_reg_3079,
        ce1 => line_buffer_V_0_ce1,
        we1 => line_buffer_V_0_we1,
        d1 => line_buffer_V_1_q0);

    line_buffer_V_1_U : component convolution_filtebkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_1_address0,
        ce0 => line_buffer_V_1_ce0,
        q0 => line_buffer_V_1_q0,
        address1 => line_buffer_V_1_addr_reg_3085,
        ce1 => line_buffer_V_1_ce1,
        we1 => line_buffer_V_1_we1,
        d1 => line_buffer_V_2_q0);

    line_buffer_V_2_U : component convolution_filtebkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_2_address0,
        ce0 => line_buffer_V_2_ce0,
        q0 => line_buffer_V_2_q0,
        address1 => line_buffer_V_2_addr_reg_3091,
        ce1 => line_buffer_V_2_ce1,
        we1 => line_buffer_V_2_we1,
        d1 => line_buffer_V_3_q0);

    line_buffer_V_3_U : component convolution_filtebkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_3_address0,
        ce0 => line_buffer_V_3_ce0,
        q0 => line_buffer_V_3_q0,
        address1 => line_buffer_V_3_addr_reg_3097,
        ce1 => line_buffer_V_3_ce1,
        we1 => line_buffer_V_3_we1,
        d1 => line_buffer_V_4_q0);

    line_buffer_V_4_U : component convolution_filtebkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_4_address0,
        ce0 => line_buffer_V_4_ce0,
        q0 => line_buffer_V_4_q0,
        address1 => line_buffer_V_4_addr_reg_3103,
        ce1 => line_buffer_V_4_ce1,
        we1 => line_buffer_V_4_we1,
        d1 => line_buffer_V_5_q0);

    line_buffer_V_5_U : component convolution_filtebkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_V_5_address0,
        ce0 => line_buffer_V_5_ce0,
        q0 => line_buffer_V_5_q0,
        address1 => line_buffer_V_5_address1,
        ce1 => line_buffer_V_5_ce1,
        we1 => line_buffer_V_5_we1,
        d1 => in_temp_V_reg_3118);

    convolution_filter_AXILiteS_s_axi_U : component convolution_filter_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        kernel_config_V_address0 => kernel_config_V_address0,
        kernel_config_V_ce0 => kernel_config_V_ce0,
        kernel_config_V_q0 => kernel_config_V_q0);

    convolution_filtehbi_U1 : component convolution_filtehbi
    generic map (
        ID => 1,
        NUM_STAGE => 27,
        din0_WIDTH => 23,
        din1_WIDTH => 8,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2652_p0,
        din1 => kernel_sum_V_load_reg_3180_pp0_iter3_reg,
        ce => grp_fu_2652_ce,
        dout => grp_fu_2652_p2);

    convolution_filteibs_U2 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_0_0,
        din1 => grp_fu_2668_p1,
        din2 => grp_fu_2676_p3,
        dout => grp_fu_2668_p3);

    convolution_filtejbC_U3 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_0_1,
        din1 => grp_fu_2676_p1,
        din2 => temp_V_3_fu_1675_p2,
        dout => grp_fu_2676_p3);

    convolution_filteibs_U4 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_0_3,
        din1 => grp_fu_2685_p1,
        din2 => grp_fu_2693_p3,
        dout => grp_fu_2685_p3);

    convolution_filtejbC_U5 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_0_4,
        din1 => grp_fu_2693_p1,
        din2 => temp_V_6_fu_1720_p2,
        dout => grp_fu_2693_p3);

    convolution_filteibs_U6 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_0_6,
        din1 => grp_fu_2702_p1,
        din2 => grp_fu_2710_p3,
        dout => grp_fu_2702_p3);

    convolution_filtejbC_U7 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_1_0,
        din1 => grp_fu_2710_p1,
        din2 => temp_V_9_fu_1766_p2,
        dout => grp_fu_2710_p3);

    convolution_filteibs_U8 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_1_2,
        din1 => grp_fu_2719_p1,
        din2 => grp_fu_2727_p3,
        dout => grp_fu_2719_p3);

    convolution_filtejbC_U9 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_1_3,
        din1 => grp_fu_2727_p1,
        din2 => temp_V_12_fu_1812_p2,
        dout => grp_fu_2727_p3);

    convolution_filteibs_U10 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_1_5,
        din1 => grp_fu_2736_p1,
        din2 => grp_fu_2744_p3,
        dout => grp_fu_2736_p3);

    convolution_filtejbC_U11 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_1_6,
        din1 => grp_fu_2744_p1,
        din2 => temp_V_15_fu_1857_p2,
        dout => grp_fu_2744_p3);

    convolution_filteibs_U12 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_2_1,
        din1 => grp_fu_2753_p1,
        din2 => grp_fu_2761_p3,
        dout => grp_fu_2753_p3);

    convolution_filtejbC_U13 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_2_2,
        din1 => grp_fu_2761_p1,
        din2 => temp_V_18_fu_1903_p2,
        dout => grp_fu_2761_p3);

    convolution_filteibs_U14 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_2_4,
        din1 => grp_fu_2770_p1,
        din2 => grp_fu_2778_p3,
        dout => grp_fu_2770_p3);

    convolution_filtejbC_U15 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_2_5,
        din1 => grp_fu_2778_p1,
        din2 => temp_V_21_fu_1948_p2,
        dout => grp_fu_2778_p3);

    convolution_filteibs_U16 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_3_0,
        din1 => grp_fu_2787_p1,
        din2 => grp_fu_2795_p3,
        dout => grp_fu_2787_p3);

    convolution_filtejbC_U17 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_3_1,
        din1 => grp_fu_2795_p1,
        din2 => temp_V_24_fu_1994_p2,
        dout => grp_fu_2795_p3);

    convolution_filteibs_U18 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_3_3,
        din1 => grp_fu_2804_p1,
        din2 => grp_fu_2812_p3,
        dout => grp_fu_2804_p3);

    convolution_filtejbC_U19 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_3_4,
        din1 => grp_fu_2812_p1,
        din2 => temp_V_27_fu_2039_p2,
        dout => grp_fu_2812_p3);

    convolution_filteibs_U20 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_3_6,
        din1 => grp_fu_2821_p1,
        din2 => grp_fu_2829_p3,
        dout => grp_fu_2821_p3);

    convolution_filtejbC_U21 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_4_0,
        din1 => grp_fu_2829_p1,
        din2 => temp_V_30_fu_2085_p2,
        dout => grp_fu_2829_p3);

    convolution_filteibs_U22 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_4_2,
        din1 => grp_fu_2838_p1,
        din2 => grp_fu_2846_p3,
        dout => grp_fu_2838_p3);

    convolution_filtejbC_U23 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_4_3,
        din1 => grp_fu_2846_p1,
        din2 => temp_V_33_fu_2131_p2,
        dout => grp_fu_2846_p3);

    convolution_filteibs_U24 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_4_5,
        din1 => grp_fu_2855_p1,
        din2 => grp_fu_2863_p3,
        dout => grp_fu_2855_p3);

    convolution_filtejbC_U25 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_4_6,
        din1 => grp_fu_2863_p1,
        din2 => temp_V_36_fu_2176_p2,
        dout => grp_fu_2863_p3);

    convolution_filteibs_U26 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_5_1,
        din1 => grp_fu_2872_p1,
        din2 => grp_fu_2880_p3,
        dout => grp_fu_2872_p3);

    convolution_filtejbC_U27 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_5_2,
        din1 => grp_fu_2880_p1,
        din2 => temp_V_39_fu_2222_p2,
        dout => grp_fu_2880_p3);

    convolution_filteibs_U28 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_5_4,
        din1 => grp_fu_2889_p1,
        din2 => grp_fu_2897_p3,
        dout => grp_fu_2889_p3);

    convolution_filtejbC_U29 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_5_5,
        din1 => grp_fu_2897_p1,
        din2 => temp_V_42_fu_2267_p2,
        dout => grp_fu_2897_p3);

    convolution_filteibs_U30 : component convolution_filteibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => kernel_V_6_0,
        din1 => grp_fu_2906_p1,
        din2 => grp_fu_2914_p3,
        dout => grp_fu_2906_p3);

    convolution_filtejbC_U31 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_6_1,
        din1 => grp_fu_2914_p1,
        din2 => temp_V_45_fu_2313_p2,
        dout => grp_fu_2914_p3);

    convolution_filtejbC_U32 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_6_3,
        din1 => grp_fu_2923_p1,
        din2 => temp_V_47_fu_2347_p2,
        dout => grp_fu_2923_p3);

    convolution_filtejbC_U33 : component convolution_filtejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => kernel_V_6_5,
        din1 => grp_fu_2932_p1,
        din2 => temp_V_49_fu_2380_p2,
        dout => grp_fu_2932_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln116_fu_631_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state3)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    in_img_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_img_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_img_V_0_ack_out = ap_const_logic_1) and (in_img_V_0_vld_out = ap_const_logic_1))) then 
                                        in_img_V_0_sel_rd <= not(in_img_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_img_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_img_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_img_V_0_ack_in = ap_const_logic_1) and (in_img_V_0_vld_in = ap_const_logic_1))) then 
                                        in_img_V_0_sel_wr <= not(in_img_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_img_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_img_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_img_V_0_state = ap_const_lv2_2) and (in_img_V_0_vld_in = ap_const_logic_0)) or ((in_img_V_0_state = ap_const_lv2_3) and (in_img_V_0_vld_in = ap_const_logic_0) and (in_img_V_0_ack_out = ap_const_logic_1)))) then 
                    in_img_V_0_state <= ap_const_lv2_2;
                elsif ((((in_img_V_0_state = ap_const_lv2_1) and (in_img_V_0_ack_out = ap_const_logic_0)) or ((in_img_V_0_state = ap_const_lv2_3) and (in_img_V_0_ack_out = ap_const_logic_0) and (in_img_V_0_vld_in = ap_const_logic_1)))) then 
                    in_img_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_img_V_0_vld_in = ap_const_logic_0) and (in_img_V_0_ack_out = ap_const_logic_1))) and not(((in_img_V_0_ack_out = ap_const_logic_0) and (in_img_V_0_vld_in = ap_const_logic_1))) and (in_img_V_0_state = ap_const_lv2_3)) or ((in_img_V_0_state = ap_const_lv2_1) and (in_img_V_0_ack_out = ap_const_logic_1)) or ((in_img_V_0_state = ap_const_lv2_2) and (in_img_V_0_vld_in = ap_const_logic_1)))) then 
                    in_img_V_0_state <= ap_const_lv2_3;
                else 
                    in_img_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_img_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_img_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_img_V_1_ack_out = ap_const_logic_1) and (out_img_V_1_vld_out = ap_const_logic_1))) then 
                                        out_img_V_1_sel_rd <= not(out_img_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_img_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_img_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_img_V_1_ack_in = ap_const_logic_1) and (out_img_V_1_vld_in = ap_const_logic_1))) then 
                                        out_img_V_1_sel_wr <= not(out_img_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_img_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_img_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_img_V_1_state = ap_const_lv2_2) and (out_img_V_1_vld_in = ap_const_logic_0)) or ((out_img_V_1_state = ap_const_lv2_3) and (out_img_V_1_vld_in = ap_const_logic_0) and (out_img_V_1_ack_out = ap_const_logic_1)))) then 
                    out_img_V_1_state <= ap_const_lv2_2;
                elsif ((((out_img_V_1_state = ap_const_lv2_1) and (out_img_V_TREADY = ap_const_logic_0)) or ((out_img_V_1_state = ap_const_lv2_3) and (out_img_V_TREADY = ap_const_logic_0) and (out_img_V_1_vld_in = ap_const_logic_1)))) then 
                    out_img_V_1_state <= ap_const_lv2_1;
                elsif (((not(((out_img_V_1_vld_in = ap_const_logic_0) and (out_img_V_1_ack_out = ap_const_logic_1))) and not(((out_img_V_TREADY = ap_const_logic_0) and (out_img_V_1_vld_in = ap_const_logic_1))) and (out_img_V_1_state = ap_const_lv2_3)) or ((out_img_V_1_state = ap_const_lv2_1) and (out_img_V_1_ack_out = ap_const_logic_1)) or ((out_img_V_1_state = ap_const_lv2_2) and (out_img_V_1_vld_in = ap_const_logic_1)))) then 
                    out_img_V_1_state <= ap_const_lv2_3;
                else 
                    out_img_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    col_0_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                col_0_reg_547 <= col_fu_860_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                col_0_reg_547 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    i_1_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_fu_733_p2 = ap_const_lv1_1) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_1_fu_306 <= select_ln125_1_fu_777_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_1_fu_306 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    in_temp_V_1_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln156_reg_3114) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_temp_V_1_fu_314 <= in_temp_V_reg_3118;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                in_temp_V_1_fu_314 <= window_V_6_6;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_503 <= add_ln116_fu_637_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_503 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    iteration_0_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iteration_0_reg_514 <= select_ln116_fu_717_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                iteration_0_reg_514 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    iteration_1_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iteration_1_reg_536 <= add_ln171_fu_854_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                iteration_1_reg_536 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    j_1_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_fu_733_p2 = ap_const_lv1_1) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_1_fu_310 <= add_ln131_fu_798_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_1_fu_310 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    row_0_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                row_0_reg_525 <= select_ln116_1_fu_725_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_0_reg_525 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    window_V_0_6_loc_1_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                window_V_0_6_loc_1_fu_338 <= line_buffer_V_0_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                window_V_0_6_loc_1_fu_338 <= window_V_0_6;
            end if; 
        end if;
    end process;

    window_V_1_6_loc_1_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                window_V_1_6_loc_1_fu_334 <= line_buffer_V_1_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                window_V_1_6_loc_1_fu_334 <= window_V_1_6;
            end if; 
        end if;
    end process;

    window_V_2_6_loc_1_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                window_V_2_6_loc_1_fu_330 <= line_buffer_V_2_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                window_V_2_6_loc_1_fu_330 <= window_V_2_6;
            end if; 
        end if;
    end process;

    window_V_3_6_loc_1_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                window_V_3_6_loc_1_fu_326 <= line_buffer_V_3_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                window_V_3_6_loc_1_fu_326 <= window_V_3_6;
            end if; 
        end if;
    end process;

    window_V_4_6_loc_1_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                window_V_4_6_loc_1_fu_322 <= line_buffer_V_4_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                window_V_4_6_loc_1_fu_322 <= window_V_4_6;
            end if; 
        end if;
    end process;

    window_V_5_6_loc_1_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                window_V_5_6_loc_1_fu_318 <= line_buffer_V_5_q0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                window_V_5_6_loc_1_fu_318 <= window_V_5_6;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln164_reg_3124_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                add_ln68_12_reg_3210 <= grp_fu_2736_p3;
                add_ln68_14_reg_3215 <= grp_fu_2753_p3;
                add_ln68_17_reg_3220 <= grp_fu_2770_p3;
                add_ln68_19_reg_3225 <= grp_fu_2787_p3;
                add_ln68_1_reg_3190 <= grp_fu_2668_p3;
                add_ln68_24_reg_3230 <= grp_fu_2804_p3;
                add_ln68_26_reg_3235 <= grp_fu_2821_p3;
                add_ln68_29_reg_3240 <= grp_fu_2838_p3;
                add_ln68_31_reg_3245 <= grp_fu_2855_p3;
                add_ln68_35_reg_3250 <= grp_fu_2872_p3;
                add_ln68_37_reg_3255 <= grp_fu_2889_p3;
                add_ln68_3_reg_3195 <= grp_fu_2685_p3;
                add_ln68_40_reg_3260 <= grp_fu_2906_p3;
                add_ln68_6_reg_3200 <= grp_fu_2702_p3;
                add_ln68_8_reg_3205 <= grp_fu_2719_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln164_reg_3124_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln68_43_reg_3265 <= add_ln68_43_fu_2446_p2;
                kernel_off_V_load_reg_3185 <= kernel_off_V;
                kernel_sum_V_load_reg_3180 <= kernel_sum_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln164_reg_3124_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln68_47_reg_3270 <= add_ln68_47_fu_2640_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln156_reg_3114 <= and_ln156_fu_830_p2;
                and_ln164_reg_3124 <= and_ln164_fu_848_p2;
                icmp_ln123_reg_3050 <= icmp_ln123_fu_733_p2;
                icmp_ln145_reg_3075 <= icmp_ln145_fu_814_p2;
                select_ln156_1_reg_3035 <= select_ln156_1_fu_663_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln164_reg_3124_pp0_iter10_reg <= and_ln164_reg_3124_pp0_iter9_reg;
                and_ln164_reg_3124_pp0_iter11_reg <= and_ln164_reg_3124_pp0_iter10_reg;
                and_ln164_reg_3124_pp0_iter12_reg <= and_ln164_reg_3124_pp0_iter11_reg;
                and_ln164_reg_3124_pp0_iter13_reg <= and_ln164_reg_3124_pp0_iter12_reg;
                and_ln164_reg_3124_pp0_iter14_reg <= and_ln164_reg_3124_pp0_iter13_reg;
                and_ln164_reg_3124_pp0_iter15_reg <= and_ln164_reg_3124_pp0_iter14_reg;
                and_ln164_reg_3124_pp0_iter16_reg <= and_ln164_reg_3124_pp0_iter15_reg;
                and_ln164_reg_3124_pp0_iter17_reg <= and_ln164_reg_3124_pp0_iter16_reg;
                and_ln164_reg_3124_pp0_iter18_reg <= and_ln164_reg_3124_pp0_iter17_reg;
                and_ln164_reg_3124_pp0_iter19_reg <= and_ln164_reg_3124_pp0_iter18_reg;
                and_ln164_reg_3124_pp0_iter20_reg <= and_ln164_reg_3124_pp0_iter19_reg;
                and_ln164_reg_3124_pp0_iter21_reg <= and_ln164_reg_3124_pp0_iter20_reg;
                and_ln164_reg_3124_pp0_iter22_reg <= and_ln164_reg_3124_pp0_iter21_reg;
                and_ln164_reg_3124_pp0_iter23_reg <= and_ln164_reg_3124_pp0_iter22_reg;
                and_ln164_reg_3124_pp0_iter24_reg <= and_ln164_reg_3124_pp0_iter23_reg;
                and_ln164_reg_3124_pp0_iter25_reg <= and_ln164_reg_3124_pp0_iter24_reg;
                and_ln164_reg_3124_pp0_iter26_reg <= and_ln164_reg_3124_pp0_iter25_reg;
                and_ln164_reg_3124_pp0_iter27_reg <= and_ln164_reg_3124_pp0_iter26_reg;
                and_ln164_reg_3124_pp0_iter28_reg <= and_ln164_reg_3124_pp0_iter27_reg;
                and_ln164_reg_3124_pp0_iter29_reg <= and_ln164_reg_3124_pp0_iter28_reg;
                and_ln164_reg_3124_pp0_iter2_reg <= and_ln164_reg_3124_pp0_iter1_reg;
                and_ln164_reg_3124_pp0_iter30_reg <= and_ln164_reg_3124_pp0_iter29_reg;
                and_ln164_reg_3124_pp0_iter3_reg <= and_ln164_reg_3124_pp0_iter2_reg;
                and_ln164_reg_3124_pp0_iter4_reg <= and_ln164_reg_3124_pp0_iter3_reg;
                and_ln164_reg_3124_pp0_iter5_reg <= and_ln164_reg_3124_pp0_iter4_reg;
                and_ln164_reg_3124_pp0_iter6_reg <= and_ln164_reg_3124_pp0_iter5_reg;
                and_ln164_reg_3124_pp0_iter7_reg <= and_ln164_reg_3124_pp0_iter6_reg;
                and_ln164_reg_3124_pp0_iter8_reg <= and_ln164_reg_3124_pp0_iter7_reg;
                and_ln164_reg_3124_pp0_iter9_reg <= and_ln164_reg_3124_pp0_iter8_reg;
                kernel_off_V_load_reg_3185_pp0_iter10_reg <= kernel_off_V_load_reg_3185_pp0_iter9_reg;
                kernel_off_V_load_reg_3185_pp0_iter11_reg <= kernel_off_V_load_reg_3185_pp0_iter10_reg;
                kernel_off_V_load_reg_3185_pp0_iter12_reg <= kernel_off_V_load_reg_3185_pp0_iter11_reg;
                kernel_off_V_load_reg_3185_pp0_iter13_reg <= kernel_off_V_load_reg_3185_pp0_iter12_reg;
                kernel_off_V_load_reg_3185_pp0_iter14_reg <= kernel_off_V_load_reg_3185_pp0_iter13_reg;
                kernel_off_V_load_reg_3185_pp0_iter15_reg <= kernel_off_V_load_reg_3185_pp0_iter14_reg;
                kernel_off_V_load_reg_3185_pp0_iter16_reg <= kernel_off_V_load_reg_3185_pp0_iter15_reg;
                kernel_off_V_load_reg_3185_pp0_iter17_reg <= kernel_off_V_load_reg_3185_pp0_iter16_reg;
                kernel_off_V_load_reg_3185_pp0_iter18_reg <= kernel_off_V_load_reg_3185_pp0_iter17_reg;
                kernel_off_V_load_reg_3185_pp0_iter19_reg <= kernel_off_V_load_reg_3185_pp0_iter18_reg;
                kernel_off_V_load_reg_3185_pp0_iter20_reg <= kernel_off_V_load_reg_3185_pp0_iter19_reg;
                kernel_off_V_load_reg_3185_pp0_iter21_reg <= kernel_off_V_load_reg_3185_pp0_iter20_reg;
                kernel_off_V_load_reg_3185_pp0_iter22_reg <= kernel_off_V_load_reg_3185_pp0_iter21_reg;
                kernel_off_V_load_reg_3185_pp0_iter23_reg <= kernel_off_V_load_reg_3185_pp0_iter22_reg;
                kernel_off_V_load_reg_3185_pp0_iter24_reg <= kernel_off_V_load_reg_3185_pp0_iter23_reg;
                kernel_off_V_load_reg_3185_pp0_iter25_reg <= kernel_off_V_load_reg_3185_pp0_iter24_reg;
                kernel_off_V_load_reg_3185_pp0_iter26_reg <= kernel_off_V_load_reg_3185_pp0_iter25_reg;
                kernel_off_V_load_reg_3185_pp0_iter27_reg <= kernel_off_V_load_reg_3185_pp0_iter26_reg;
                kernel_off_V_load_reg_3185_pp0_iter28_reg <= kernel_off_V_load_reg_3185_pp0_iter27_reg;
                kernel_off_V_load_reg_3185_pp0_iter29_reg <= kernel_off_V_load_reg_3185_pp0_iter28_reg;
                kernel_off_V_load_reg_3185_pp0_iter3_reg <= kernel_off_V_load_reg_3185;
                kernel_off_V_load_reg_3185_pp0_iter4_reg <= kernel_off_V_load_reg_3185_pp0_iter3_reg;
                kernel_off_V_load_reg_3185_pp0_iter5_reg <= kernel_off_V_load_reg_3185_pp0_iter4_reg;
                kernel_off_V_load_reg_3185_pp0_iter6_reg <= kernel_off_V_load_reg_3185_pp0_iter5_reg;
                kernel_off_V_load_reg_3185_pp0_iter7_reg <= kernel_off_V_load_reg_3185_pp0_iter6_reg;
                kernel_off_V_load_reg_3185_pp0_iter8_reg <= kernel_off_V_load_reg_3185_pp0_iter7_reg;
                kernel_off_V_load_reg_3185_pp0_iter9_reg <= kernel_off_V_load_reg_3185_pp0_iter8_reg;
                kernel_sum_V_load_reg_3180_pp0_iter3_reg <= kernel_sum_V_load_reg_3180;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln164_reg_3124_pp0_iter1_reg <= and_ln164_reg_3124;
                icmp_ln116_reg_3026 <= icmp_ln116_fu_631_p2;
                in_temp_V_1_load_reg_3138 <= in_temp_V_1_fu_314;
                window_V_0_6_loc_1_l_reg_3174 <= window_V_0_6_loc_1_fu_338;
                window_V_1_6_loc_1_l_reg_3168 <= window_V_1_6_loc_1_fu_334;
                window_V_2_6_loc_1_l_reg_3162 <= window_V_2_6_loc_1_fu_330;
                window_V_3_6_loc_1_l_reg_3156 <= window_V_3_6_loc_1_fu_326;
                window_V_4_6_loc_1_l_reg_3150 <= window_V_4_6_loc_1_fu_322;
                window_V_5_6_loc_1_l_reg_3144 <= window_V_5_6_loc_1_fu_318;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_fu_733_p2 = ap_const_lv1_0) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln133_reg_3054 <= icmp_ln133_fu_739_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln133_fu_739_p2 = ap_const_lv1_0) and (icmp_ln123_fu_733_p2 = ap_const_lv1_0) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln135_reg_3058 <= icmp_ln135_fu_745_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_img_V_0_load_A = ap_const_logic_1)) then
                in_img_V_0_payload_A <= in_img_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_img_V_0_load_B = ap_const_logic_1)) then
                in_img_V_0_payload_B <= in_img_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op154_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                in_temp_V_reg_3118 <= in_img_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_0) and (trunc_ln180_reg_3067 = ap_const_lv3_0) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_0_0 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_1) and (trunc_ln180_reg_3067 = ap_const_lv3_0) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_0_1 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_2) and (trunc_ln180_reg_3067 = ap_const_lv3_0) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_0_2 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_3) and (trunc_ln180_reg_3067 = ap_const_lv3_0) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_0_3 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_4) and (trunc_ln180_reg_3067 = ap_const_lv3_0) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_0_4 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_5) and (trunc_ln180_reg_3067 = ap_const_lv3_0) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_0_5 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_6) and (trunc_ln180_reg_3067 = ap_const_lv3_0) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_7) and (trunc_ln180_reg_3067 = ap_const_lv3_0) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_0_6 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_0) and (trunc_ln180_reg_3067 = ap_const_lv3_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_1_0 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_1) and (trunc_ln180_reg_3067 = ap_const_lv3_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_1_1 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_2) and (trunc_ln180_reg_3067 = ap_const_lv3_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_1_2 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_3) and (trunc_ln180_reg_3067 = ap_const_lv3_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_1_3 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_4) and (trunc_ln180_reg_3067 = ap_const_lv3_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_1_4 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_5) and (trunc_ln180_reg_3067 = ap_const_lv3_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_1_5 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_6) and (trunc_ln180_reg_3067 = ap_const_lv3_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_7) and (trunc_ln180_reg_3067 = ap_const_lv3_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_1_6 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_0) and (trunc_ln180_reg_3067 = ap_const_lv3_2) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_2_0 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_1) and (trunc_ln180_reg_3067 = ap_const_lv3_2) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_2_1 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_2) and (trunc_ln180_reg_3067 = ap_const_lv3_2) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_2_2 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_3) and (trunc_ln180_reg_3067 = ap_const_lv3_2) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_2_3 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_4) and (trunc_ln180_reg_3067 = ap_const_lv3_2) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_2_4 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_5) and (trunc_ln180_reg_3067 = ap_const_lv3_2) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_2_5 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_6) and (trunc_ln180_reg_3067 = ap_const_lv3_2) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_7) and (trunc_ln180_reg_3067 = ap_const_lv3_2) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_2_6 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_0) and (trunc_ln180_reg_3067 = ap_const_lv3_3) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_3_0 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_1) and (trunc_ln180_reg_3067 = ap_const_lv3_3) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_3_1 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_2) and (trunc_ln180_reg_3067 = ap_const_lv3_3) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_3_2 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_3) and (trunc_ln180_reg_3067 = ap_const_lv3_3) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_3_3 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_4) and (trunc_ln180_reg_3067 = ap_const_lv3_3) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_3_4 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_5) and (trunc_ln180_reg_3067 = ap_const_lv3_3) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_3_5 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_6) and (trunc_ln180_reg_3067 = ap_const_lv3_3) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_7) and (trunc_ln180_reg_3067 = ap_const_lv3_3) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_3_6 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_0) and (trunc_ln180_reg_3067 = ap_const_lv3_4) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_4_0 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_1) and (trunc_ln180_reg_3067 = ap_const_lv3_4) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_4_1 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_2) and (trunc_ln180_reg_3067 = ap_const_lv3_4) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_4_2 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_3) and (trunc_ln180_reg_3067 = ap_const_lv3_4) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_4_3 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_4) and (trunc_ln180_reg_3067 = ap_const_lv3_4) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_4_4 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_5) and (trunc_ln180_reg_3067 = ap_const_lv3_4) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_4_5 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_6) and (trunc_ln180_reg_3067 = ap_const_lv3_4) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_7) and (trunc_ln180_reg_3067 = ap_const_lv3_4) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_4_6 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_0) and (trunc_ln180_reg_3067 = ap_const_lv3_5) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_5_0 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_1) and (trunc_ln180_reg_3067 = ap_const_lv3_5) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_5_1 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_2) and (trunc_ln180_reg_3067 = ap_const_lv3_5) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_5_2 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_3) and (trunc_ln180_reg_3067 = ap_const_lv3_5) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_5_3 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_4) and (trunc_ln180_reg_3067 = ap_const_lv3_5) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_5_4 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_5) and (trunc_ln180_reg_3067 = ap_const_lv3_5) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_V_5_5 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_6) and (trunc_ln180_reg_3067 = ap_const_lv3_5) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_7) and (trunc_ln180_reg_3067 = ap_const_lv3_5) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_5_6 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_0) and (trunc_ln180_reg_3067 = ap_const_lv3_6) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_0) and (trunc_ln180_reg_3067 = ap_const_lv3_7) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_6_0 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_1) and (trunc_ln180_reg_3067 = ap_const_lv3_6) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_1) and (trunc_ln180_reg_3067 = ap_const_lv3_7) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_6_1 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_2) and (trunc_ln180_reg_3067 = ap_const_lv3_6) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_2) and (trunc_ln180_reg_3067 = ap_const_lv3_7) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_6_2 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_3) and (trunc_ln180_reg_3067 = ap_const_lv3_6) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_3) and (trunc_ln180_reg_3067 = ap_const_lv3_7) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_6_3 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_4) and (trunc_ln180_reg_3067 = ap_const_lv3_6) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_4) and (trunc_ln180_reg_3067 = ap_const_lv3_7) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_6_4 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_5) and (trunc_ln180_reg_3067 = ap_const_lv3_6) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_5) and (trunc_ln180_reg_3067 = ap_const_lv3_7) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_6_5 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_6) and (trunc_ln180_reg_3067 = ap_const_lv3_7) and (icmp_ln116_reg_3026 = ap_const_lv1_0)) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_7) and (trunc_ln180_reg_3067 = ap_const_lv3_7) and (icmp_ln116_reg_3026 = ap_const_lv1_0))) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_7) and (trunc_ln180_reg_3067 = ap_const_lv3_6) and (icmp_ln116_reg_3026 = ap_const_lv1_0))) or ((icmp_ln123_reg_3050 = ap_const_lv1_1) and (trunc_ln180_1_reg_3071 = ap_const_lv3_6) and (trunc_ln180_reg_3067 = ap_const_lv3_6) and (icmp_ln116_reg_3026 = ap_const_lv1_0))))) then
                kernel_V_6_6 <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_reg_3058 = ap_const_lv1_1) and (icmp_ln133_reg_3054 = ap_const_lv1_0) and (icmp_ln123_reg_3050 = ap_const_lv1_0) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_off_V <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln133_reg_3054 = ap_const_lv1_1) and (icmp_ln123_reg_3050 = ap_const_lv1_0) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                kernel_sum_V <= kernel_config_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_fu_814_p2 = ap_const_lv1_1) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                line_buffer_V_0_addr_reg_3079 <= zext_ln149_fu_820_p1(10 - 1 downto 0);
                line_buffer_V_1_addr_reg_3085 <= zext_ln149_fu_820_p1(10 - 1 downto 0);
                line_buffer_V_2_addr_reg_3091 <= zext_ln149_fu_820_p1(10 - 1 downto 0);
                line_buffer_V_3_addr_reg_3097 <= zext_ln149_fu_820_p1(10 - 1 downto 0);
                line_buffer_V_4_addr_reg_3103 <= zext_ln149_fu_820_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_img_V_1_load_A = ap_const_logic_1)) then
                out_img_V_1_payload_A <= add_ln647_fu_2662_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_img_V_1_load_B = ap_const_logic_1)) then
                out_img_V_1_payload_B <= add_ln647_fu_2662_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln123_fu_733_p2 = ap_const_lv1_1) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln180_1_reg_3071 <= trunc_ln180_1_fu_794_p1;
                trunc_ln180_reg_3067 <= trunc_ln180_fu_790_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                window_V_0_1 <= window_V_0_2;
                window_V_0_2 <= window_V_0_3;
                window_V_0_3 <= window_V_0_4;
                window_V_0_4 <= window_V_0_5;
                window_V_0_5 <= window_V_0_6_loc_1_l_reg_3174;
                window_V_1_1 <= window_V_1_2;
                window_V_1_2 <= window_V_1_3;
                window_V_1_3 <= window_V_1_4;
                window_V_1_4 <= window_V_1_5;
                window_V_1_5 <= window_V_1_6_loc_1_l_reg_3168;
                window_V_2_1 <= window_V_2_2;
                window_V_2_2 <= window_V_2_3;
                window_V_2_3 <= window_V_2_4;
                window_V_2_4 <= window_V_2_5;
                window_V_2_5 <= window_V_2_6_loc_1_l_reg_3162;
                window_V_3_1 <= window_V_3_2;
                window_V_3_2 <= window_V_3_3;
                window_V_3_3 <= window_V_3_4;
                window_V_3_4 <= window_V_3_5;
                window_V_3_5 <= window_V_3_6_loc_1_l_reg_3156;
                window_V_4_1 <= window_V_4_2;
                window_V_4_2 <= window_V_4_3;
                window_V_4_3 <= window_V_4_4;
                window_V_4_4 <= window_V_4_5;
                window_V_4_5 <= window_V_4_6_loc_1_l_reg_3150;
                window_V_5_1 <= window_V_5_2;
                window_V_5_2 <= window_V_5_3;
                window_V_5_3 <= window_V_5_4;
                window_V_5_4 <= window_V_5_5;
                window_V_5_5 <= window_V_5_6_loc_1_l_reg_3144;
                window_V_6_1 <= window_V_6_2;
                window_V_6_2 <= window_V_6_3;
                window_V_6_3 <= window_V_6_4;
                window_V_6_4 <= window_V_6_5;
                window_V_6_5 <= in_temp_V_1_load_reg_3138;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                window_V_0_6 <= line_buffer_V_0_q0;
                window_V_1_6 <= line_buffer_V_1_q0;
                window_V_2_6 <= line_buffer_V_2_q0;
                window_V_3_6 <= line_buffer_V_3_q0;
                window_V_4_6 <= line_buffer_V_4_q0;
                window_V_5_6 <= line_buffer_V_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln156_fu_830_p2) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                window_V_6_6 <= in_img_V_0_data_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, out_img_V_TREADY, out_img_V_1_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_CS_fsm_state34)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state34 => 
                if ((not(((out_img_V_1_state = ap_const_lv2_1) or ((out_img_V_1_state = ap_const_lv2_3) and (out_img_V_TREADY = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln116_1_fu_671_p2 <= std_logic_vector(unsigned(row_0_reg_525) + unsigned(ap_const_lv9_1));
    add_ln116_fu_637_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_503) + unsigned(ap_const_lv19_1));
    add_ln117_fu_643_p2 <= std_logic_vector(unsigned(iteration_0_reg_514) + unsigned(ap_const_lv19_283));
    add_ln128_fu_763_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(i_1_fu_306));
    add_ln131_fu_798_p2 <= std_logic_vector(unsigned(select_ln125_fu_769_p3) + unsigned(ap_const_lv32_1));
    add_ln171_fu_854_p2 <= std_logic_vector(unsigned(select_ln156_fu_655_p3) + unsigned(ap_const_lv19_1));
    add_ln647_fu_2662_p2 <= std_logic_vector(unsigned(kernel_off_V_load_reg_3185_pp0_iter29_reg) + unsigned(trunc_ln647_fu_2658_p1));
    add_ln68_10_fu_2484_p2 <= std_logic_vector(signed(sext_ln68_5_fu_2464_p1) + signed(sext_ln68_10_fu_2480_p1));
    add_ln68_15_fu_2500_p2 <= std_logic_vector(signed(sext_ln68_13_fu_2494_p1) + signed(sext_ln68_15_fu_2497_p1));
    add_ln68_20_fu_2516_p2 <= std_logic_vector(signed(sext_ln68_18_fu_2510_p1) + signed(sext_ln68_20_fu_2513_p1));
    add_ln68_21_fu_2526_p2 <= std_logic_vector(signed(sext_ln68_16_fu_2506_p1) + signed(sext_ln68_21_fu_2522_p1));
    add_ln68_22_fu_2536_p2 <= std_logic_vector(signed(sext_ln68_11_fu_2490_p1) + signed(sext_ln68_22_fu_2532_p1));
    add_ln68_27_fu_2552_p2 <= std_logic_vector(signed(sext_ln68_25_fu_2546_p1) + signed(sext_ln68_27_fu_2549_p1));
    add_ln68_32_fu_2568_p2 <= std_logic_vector(signed(sext_ln68_30_fu_2562_p1) + signed(sext_ln68_32_fu_2565_p1));
    add_ln68_33_fu_2578_p2 <= std_logic_vector(signed(sext_ln68_28_fu_2558_p1) + signed(sext_ln68_33_fu_2574_p1));
    add_ln68_38_fu_2594_p2 <= std_logic_vector(signed(sext_ln68_36_fu_2588_p1) + signed(sext_ln68_38_fu_2591_p1));
    add_ln68_43_fu_2446_p2 <= std_logic_vector(signed(sext_ln68_42_fu_2440_p1) + signed(sext_ln68_43_fu_2443_p1));
    add_ln68_44_fu_2610_p2 <= std_logic_vector(signed(sext_ln68_41_fu_2604_p1) + signed(sext_ln68_44_fu_2607_p1));
    add_ln68_45_fu_2620_p2 <= std_logic_vector(signed(sext_ln68_39_fu_2600_p1) + signed(sext_ln68_45_fu_2616_p1));
    add_ln68_46_fu_2630_p2 <= std_logic_vector(signed(sext_ln68_34_fu_2584_p1) + signed(sext_ln68_46_fu_2626_p1));
    add_ln68_47_fu_2640_p2 <= std_logic_vector(signed(sext_ln68_23_fu_2542_p1) + signed(sext_ln68_47_fu_2636_p1));
    add_ln68_4_fu_2458_p2 <= std_logic_vector(signed(sext_ln68_2_fu_2452_p1) + signed(sext_ln68_4_fu_2455_p1));
    add_ln68_9_fu_2474_p2 <= std_logic_vector(signed(sext_ln68_7_fu_2468_p1) + signed(sext_ln68_9_fu_2471_p1));
    and_ln156_fu_830_p2 <= (select_ln156_2_fu_689_p3 and icmp_ln145_fu_814_p2);
    and_ln164_fu_848_p2 <= (select_ln156_3_fu_709_p3 and icmp_ln164_1_fu_842_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state34 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_img_V_0_vld_out, ap_enable_reg_pp0_iter0, ap_predicate_op154_read_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((in_img_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op154_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_img_V_0_vld_out, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_predicate_op154_read_state2, ap_block_state32_io, ap_block_state33_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state33_io) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((in_img_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op154_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_img_V_0_vld_out, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_predicate_op154_read_state2, ap_block_state32_io, ap_block_state33_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state33_io) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((in_img_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op154_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter0_assign_proc : process(in_img_V_0_vld_out, ap_predicate_op154_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((in_img_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op154_read_state2 = ap_const_boolean_1));
    end process;

        ap_block_state30_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state32_io_assign_proc : process(out_img_V_1_ack_in, and_ln164_reg_3124_pp0_iter29_reg)
    begin
                ap_block_state32_io <= ((ap_const_lv1_1 = and_ln164_reg_3124_pp0_iter29_reg) and (out_img_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state32_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state33_io_assign_proc : process(out_img_V_1_ack_in, and_ln164_reg_3124_pp0_iter30_reg)
    begin
                ap_block_state33_io <= ((ap_const_lv1_1 = and_ln164_reg_3124_pp0_iter30_reg) and (out_img_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state33_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state34_assign_proc : process(out_img_V_TREADY, out_img_V_1_state)
    begin
                ap_block_state34 <= ((out_img_V_1_state = ap_const_lv2_1) or ((out_img_V_1_state = ap_const_lv2_3) and (out_img_V_TREADY = ap_const_logic_0)));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2384_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln116_fu_631_p2)
    begin
                ap_condition_2384 <= ((icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_2386_assign_proc : process(icmp_ln123_fu_733_p2, icmp_ln133_fu_739_p2, icmp_ln135_fu_745_p2)
    begin
                ap_condition_2386 <= ((icmp_ln135_fu_745_p2 = ap_const_lv1_1) and (icmp_ln133_fu_739_p2 = ap_const_lv1_0) and (icmp_ln123_fu_733_p2 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter1_state3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(out_img_V_TREADY, out_img_V_1_state, ap_CS_fsm_state34)
    begin
        if ((not(((out_img_V_1_state = ap_const_lv2_1) or ((out_img_V_1_state = ap_const_lv2_3) and (out_img_V_TREADY = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29)
    begin
        if (((ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op154_read_state2_assign_proc : process(icmp_ln116_fu_631_p2, and_ln156_fu_830_p2)
    begin
                ap_predicate_op154_read_state2 <= ((ap_const_lv1_1 = and_ln156_fu_830_p2) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(out_img_V_TREADY, out_img_V_1_state, ap_CS_fsm_state34)
    begin
        if ((not(((out_img_V_1_state = ap_const_lv2_1) or ((out_img_V_1_state = ap_const_lv2_3) and (out_img_V_TREADY = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    col_fu_860_p2 <= std_logic_vector(unsigned(select_ln156_1_fu_663_p3) + unsigned(ap_const_lv10_1));

    grp_fu_2652_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2652_ce <= ap_const_logic_1;
        else 
            grp_fu_2652_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_fu_2652_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_47_reg_3270),23));

    grp_fu_2668_p1 <= grp_fu_2668_p10(8 - 1 downto 0);
    grp_fu_2668_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_0_1),16));
    grp_fu_2676_p1 <= grp_fu_2676_p10(8 - 1 downto 0);
    grp_fu_2676_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_0_2),16));
    grp_fu_2685_p1 <= grp_fu_2685_p10(8 - 1 downto 0);
    grp_fu_2685_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_0_4),16));
    grp_fu_2693_p1 <= grp_fu_2693_p10(8 - 1 downto 0);
    grp_fu_2693_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_0_5),16));
    grp_fu_2702_p1 <= grp_fu_2702_p10(8 - 1 downto 0);
    grp_fu_2702_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_0_6_loc_1_fu_338),16));
    grp_fu_2710_p1 <= grp_fu_2710_p10(8 - 1 downto 0);
    grp_fu_2710_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_1_1),16));
    grp_fu_2719_p1 <= grp_fu_2719_p10(8 - 1 downto 0);
    grp_fu_2719_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_1_3),16));
    grp_fu_2727_p1 <= grp_fu_2727_p10(8 - 1 downto 0);
    grp_fu_2727_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_1_4),16));
    grp_fu_2736_p1 <= grp_fu_2736_p10(8 - 1 downto 0);
    grp_fu_2736_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_1_6_loc_1_l_reg_3168),16));
    grp_fu_2744_p1 <= grp_fu_2744_p10(8 - 1 downto 0);
    grp_fu_2744_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_1_6_loc_1_fu_334),16));
    grp_fu_2753_p1 <= grp_fu_2753_p10(8 - 1 downto 0);
    grp_fu_2753_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_2_2),16));
    grp_fu_2761_p1 <= grp_fu_2761_p10(8 - 1 downto 0);
    grp_fu_2761_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_2_3),16));
    grp_fu_2770_p1 <= grp_fu_2770_p10(8 - 1 downto 0);
    grp_fu_2770_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_2_5),16));
    grp_fu_2778_p1 <= grp_fu_2778_p10(8 - 1 downto 0);
    grp_fu_2778_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_2_6_loc_1_l_reg_3162),16));
    grp_fu_2787_p1 <= grp_fu_2787_p10(8 - 1 downto 0);
    grp_fu_2787_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_3_1),16));
    grp_fu_2795_p1 <= grp_fu_2795_p10(8 - 1 downto 0);
    grp_fu_2795_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_3_2),16));
    grp_fu_2804_p1 <= grp_fu_2804_p10(8 - 1 downto 0);
    grp_fu_2804_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_3_4),16));
    grp_fu_2812_p1 <= grp_fu_2812_p10(8 - 1 downto 0);
    grp_fu_2812_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_3_5),16));
    grp_fu_2821_p1 <= grp_fu_2821_p10(8 - 1 downto 0);
    grp_fu_2821_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_3_6_loc_1_fu_326),16));
    grp_fu_2829_p1 <= grp_fu_2829_p10(8 - 1 downto 0);
    grp_fu_2829_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_4_1),16));
    grp_fu_2838_p1 <= grp_fu_2838_p10(8 - 1 downto 0);
    grp_fu_2838_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_4_3),16));
    grp_fu_2846_p1 <= grp_fu_2846_p10(8 - 1 downto 0);
    grp_fu_2846_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_4_4),16));
    grp_fu_2855_p1 <= grp_fu_2855_p10(8 - 1 downto 0);
    grp_fu_2855_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_4_6_loc_1_l_reg_3150),16));
    grp_fu_2863_p1 <= grp_fu_2863_p10(8 - 1 downto 0);
    grp_fu_2863_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_4_6_loc_1_fu_322),16));
    grp_fu_2872_p1 <= grp_fu_2872_p10(8 - 1 downto 0);
    grp_fu_2872_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_5_2),16));
    grp_fu_2880_p1 <= grp_fu_2880_p10(8 - 1 downto 0);
    grp_fu_2880_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_5_3),16));
    grp_fu_2889_p1 <= grp_fu_2889_p10(8 - 1 downto 0);
    grp_fu_2889_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_5_5),16));
    grp_fu_2897_p1 <= grp_fu_2897_p10(8 - 1 downto 0);
    grp_fu_2897_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_5_6_loc_1_l_reg_3144),16));
    grp_fu_2906_p1 <= grp_fu_2906_p10(8 - 1 downto 0);
    grp_fu_2906_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_6_1),16));
    grp_fu_2914_p1 <= grp_fu_2914_p10(8 - 1 downto 0);
    grp_fu_2914_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_6_2),16));
    grp_fu_2923_p1 <= grp_fu_2923_p10(8 - 1 downto 0);
    grp_fu_2923_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_6_4),16));
    grp_fu_2932_p1 <= grp_fu_2932_p10(8 - 1 downto 0);
    grp_fu_2932_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_temp_V_1_load_reg_3138),16));
    icmp_ln116_fu_631_p2 <= "1" when (indvar_flatten_reg_503 = ap_const_lv19_4BD29) else "0";
    icmp_ln117_fu_649_p2 <= "1" when (col_0_reg_547 = ap_const_lv10_283) else "0";
    icmp_ln123_fu_733_p2 <= "1" when (unsigned(select_ln156_fu_655_p3) < unsigned(ap_const_lv19_31)) else "0";
    icmp_ln125_fu_757_p2 <= "1" when (signed(j_1_fu_310) > signed(ap_const_lv32_6)) else "0";
    icmp_ln133_fu_739_p2 <= "1" when (select_ln156_fu_655_p3 = ap_const_lv19_31) else "0";
    icmp_ln135_fu_745_p2 <= "1" when (select_ln156_fu_655_p3 = ap_const_lv19_32) else "0";
    icmp_ln145_fu_814_p2 <= "1" when (unsigned(select_ln156_1_fu_663_p3) < unsigned(ap_const_lv10_280)) else "0";
    icmp_ln156_1_fu_683_p2 <= "1" when (unsigned(row_0_reg_525) < unsigned(ap_const_lv9_1E0)) else "0";
    icmp_ln156_fu_677_p2 <= "1" when (unsigned(add_ln116_1_fu_671_p2) < unsigned(ap_const_lv9_1E0)) else "0";
    icmp_ln164_1_fu_842_p2 <= "1" when (unsigned(select_ln156_1_fu_663_p3) > unsigned(ap_const_lv10_2)) else "0";
    icmp_ln164_2_fu_703_p2 <= "1" when (unsigned(row_0_reg_525) > unsigned(ap_const_lv9_2)) else "0";
    icmp_ln164_fu_697_p2 <= "1" when (unsigned(add_ln116_1_fu_671_p2) > unsigned(ap_const_lv9_2)) else "0";
    in_img_V_0_ack_in <= in_img_V_0_state(1);

    in_img_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_predicate_op154_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op154_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_img_V_0_ack_out <= ap_const_logic_1;
        else 
            in_img_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_img_V_0_data_out_assign_proc : process(in_img_V_0_payload_A, in_img_V_0_payload_B, in_img_V_0_sel)
    begin
        if ((in_img_V_0_sel = ap_const_logic_1)) then 
            in_img_V_0_data_out <= in_img_V_0_payload_B;
        else 
            in_img_V_0_data_out <= in_img_V_0_payload_A;
        end if; 
    end process;

    in_img_V_0_load_A <= (in_img_V_0_state_cmp_full and not(in_img_V_0_sel_wr));
    in_img_V_0_load_B <= (in_img_V_0_state_cmp_full and in_img_V_0_sel_wr);
    in_img_V_0_sel <= in_img_V_0_sel_rd;
    in_img_V_0_state_cmp_full <= '0' when (in_img_V_0_state = ap_const_lv2_1) else '1';
    in_img_V_0_vld_in <= in_img_V_TVALID;
    in_img_V_0_vld_out <= in_img_V_0_state(0);

    in_img_V_TDATA_blk_n_assign_proc : process(in_img_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln116_fu_631_p2, and_ln156_fu_830_p2)
    begin
        if (((ap_const_lv1_1 = and_ln156_fu_830_p2) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_img_V_TDATA_blk_n <= in_img_V_0_state(0);
        else 
            in_img_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_img_V_TREADY <= in_img_V_0_state(1);

    kernel_config_V_address0_assign_proc : process(icmp_ln123_fu_733_p2, icmp_ln133_fu_739_p2, zext_ln130_fu_785_p1, ap_condition_2386, ap_condition_2384)
    begin
        if ((ap_const_boolean_1 = ap_condition_2384)) then
            if ((icmp_ln123_fu_733_p2 = ap_const_lv1_1)) then 
                kernel_config_V_address0 <= zext_ln130_fu_785_p1(6 - 1 downto 0);
            elsif (((icmp_ln133_fu_739_p2 = ap_const_lv1_1) and (icmp_ln123_fu_733_p2 = ap_const_lv1_0))) then 
                kernel_config_V_address0 <= ap_const_lv64_31(6 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_2386)) then 
                kernel_config_V_address0 <= ap_const_lv64_32(6 - 1 downto 0);
            else 
                kernel_config_V_address0 <= "XXXXXX";
            end if;
        else 
            kernel_config_V_address0 <= "XXXXXX";
        end if; 
    end process;


    kernel_config_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln116_fu_631_p2, ap_block_pp0_stage0_11001, icmp_ln123_fu_733_p2, icmp_ln133_fu_739_p2, icmp_ln135_fu_745_p2)
    begin
        if ((((icmp_ln123_fu_733_p2 = ap_const_lv1_1) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln135_fu_745_p2 = ap_const_lv1_1) and (icmp_ln133_fu_739_p2 = ap_const_lv1_0) and (icmp_ln123_fu_733_p2 = ap_const_lv1_0) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln133_fu_739_p2 = ap_const_lv1_1) and (icmp_ln123_fu_733_p2 = ap_const_lv1_0) and (icmp_ln116_fu_631_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            kernel_config_V_ce0 <= ap_const_logic_1;
        else 
            kernel_config_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_0_address0 <= zext_ln149_fu_820_p1(10 - 1 downto 0);

    line_buffer_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln116_reg_3026, ap_block_pp0_stage0_11001, icmp_ln145_reg_3075, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_0_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_address0 <= zext_ln149_fu_820_p1(10 - 1 downto 0);

    line_buffer_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln116_reg_3026, ap_block_pp0_stage0_11001, icmp_ln145_reg_3075, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_1_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_2_address0 <= zext_ln149_fu_820_p1(10 - 1 downto 0);

    line_buffer_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_2_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln116_reg_3026, ap_block_pp0_stage0_11001, icmp_ln145_reg_3075, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_2_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_3_address0 <= zext_ln149_fu_820_p1(10 - 1 downto 0);

    line_buffer_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_3_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_3_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln116_reg_3026, ap_block_pp0_stage0_11001, icmp_ln145_reg_3075, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_3_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_4_address0 <= zext_ln149_fu_820_p1(10 - 1 downto 0);

    line_buffer_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_4_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_4_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln116_reg_3026, ap_block_pp0_stage0_11001, icmp_ln145_reg_3075, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln145_reg_3075 = ap_const_lv1_1) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_4_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_5_address0 <= zext_ln149_fu_820_p1(10 - 1 downto 0);
    line_buffer_V_5_address1 <= zext_ln160_fu_1259_p1(10 - 1 downto 0);

    line_buffer_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_5_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_5_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln116_reg_3026, ap_block_pp0_stage0_11001, and_ln156_reg_3114, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = and_ln156_reg_3114) and (icmp_ln116_reg_3026 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_V_5_we1 <= ap_const_logic_1;
        else 
            line_buffer_V_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    out_img_V_1_ack_in <= out_img_V_1_state(1);
    out_img_V_1_ack_out <= out_img_V_TREADY;

    out_img_V_1_data_out_assign_proc : process(out_img_V_1_payload_A, out_img_V_1_payload_B, out_img_V_1_sel)
    begin
        if ((out_img_V_1_sel = ap_const_logic_1)) then 
            out_img_V_1_data_out <= out_img_V_1_payload_B;
        else 
            out_img_V_1_data_out <= out_img_V_1_payload_A;
        end if; 
    end process;

    out_img_V_1_load_A <= (out_img_V_1_state_cmp_full and not(out_img_V_1_sel_wr));
    out_img_V_1_load_B <= (out_img_V_1_state_cmp_full and out_img_V_1_sel_wr);
    out_img_V_1_sel <= out_img_V_1_sel_rd;
    out_img_V_1_state_cmp_full <= '0' when (out_img_V_1_state = ap_const_lv2_1) else '1';

    out_img_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter30, and_ln164_reg_3124_pp0_iter29_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln164_reg_3124_pp0_iter29_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1))) then 
            out_img_V_1_vld_in <= ap_const_logic_1;
        else 
            out_img_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_img_V_1_vld_out <= out_img_V_1_state(0);
    out_img_V_TDATA <= out_img_V_1_data_out;

    out_img_V_TDATA_blk_n_assign_proc : process(out_img_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter30, and_ln164_reg_3124_pp0_iter29_reg, ap_enable_reg_pp0_iter31, and_ln164_reg_3124_pp0_iter30_reg)
    begin
        if ((((ap_const_lv1_1 = and_ln164_reg_3124_pp0_iter30_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((ap_const_lv1_1 = and_ln164_reg_3124_pp0_iter29_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)))) then 
            out_img_V_TDATA_blk_n <= out_img_V_1_state(1);
        else 
            out_img_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_img_V_TVALID <= out_img_V_1_state(0);
    select_ln116_1_fu_725_p3 <= 
        add_ln116_1_fu_671_p2 when (icmp_ln117_fu_649_p2(0) = '1') else 
        row_0_reg_525;
    select_ln116_fu_717_p3 <= 
        add_ln117_fu_643_p2 when (icmp_ln117_fu_649_p2(0) = '1') else 
        iteration_0_reg_514;
    select_ln125_1_fu_777_p3 <= 
        add_ln128_fu_763_p2 when (icmp_ln125_fu_757_p2(0) = '1') else 
        i_1_fu_306;
    select_ln125_fu_769_p3 <= 
        ap_const_lv32_0 when (icmp_ln125_fu_757_p2(0) = '1') else 
        j_1_fu_310;
    select_ln156_1_fu_663_p3 <= 
        ap_const_lv10_0 when (icmp_ln117_fu_649_p2(0) = '1') else 
        col_0_reg_547;
    select_ln156_2_fu_689_p3 <= 
        icmp_ln156_fu_677_p2 when (icmp_ln117_fu_649_p2(0) = '1') else 
        icmp_ln156_1_fu_683_p2;
    select_ln156_3_fu_709_p3 <= 
        icmp_ln164_fu_697_p2 when (icmp_ln117_fu_649_p2(0) = '1') else 
        icmp_ln164_2_fu_703_p2;
    select_ln156_fu_655_p3 <= 
        add_ln117_fu_643_p2 when (icmp_ln117_fu_649_p2(0) = '1') else 
        iteration_1_reg_536;
        sext_ln68_10_fu_2480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_9_fu_2474_p2),20));

        sext_ln68_11_fu_2490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_10_fu_2484_p2),21));

        sext_ln68_13_fu_2494_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_12_reg_3210),19));

        sext_ln68_15_fu_2497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_14_reg_3215),19));

        sext_ln68_16_fu_2506_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_15_fu_2500_p2),20));

        sext_ln68_18_fu_2510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_17_reg_3220),19));

        sext_ln68_20_fu_2513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_19_reg_3225),19));

        sext_ln68_21_fu_2522_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_20_fu_2516_p2),20));

        sext_ln68_22_fu_2532_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_21_fu_2526_p2),21));

        sext_ln68_23_fu_2542_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_22_fu_2536_p2),22));

        sext_ln68_25_fu_2546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_24_reg_3230),19));

        sext_ln68_27_fu_2549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_26_reg_3235),19));

        sext_ln68_28_fu_2558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_27_fu_2552_p2),20));

        sext_ln68_2_fu_2452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_1_reg_3190),19));

        sext_ln68_30_fu_2562_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_29_reg_3240),19));

        sext_ln68_32_fu_2565_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_31_reg_3245),19));

        sext_ln68_33_fu_2574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_32_fu_2568_p2),20));

        sext_ln68_34_fu_2584_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_33_fu_2578_p2),21));

        sext_ln68_36_fu_2588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_35_reg_3250),19));

        sext_ln68_38_fu_2591_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_37_reg_3255),19));

        sext_ln68_39_fu_2600_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_38_fu_2594_p2),20));

        sext_ln68_41_fu_2604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_40_reg_3260),19));

        sext_ln68_42_fu_2440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2923_p3),18));

        sext_ln68_43_fu_2443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2932_p3),18));

        sext_ln68_44_fu_2607_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_43_reg_3265),19));

        sext_ln68_45_fu_2616_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_44_fu_2610_p2),20));

        sext_ln68_46_fu_2626_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_45_fu_2620_p2),21));

        sext_ln68_47_fu_2636_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_46_fu_2630_p2),22));

        sext_ln68_4_fu_2455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_3_reg_3195),19));

        sext_ln68_5_fu_2464_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_4_fu_2458_p2),20));

        sext_ln68_7_fu_2468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_6_reg_3200),19));

        sext_ln68_9_fu_2471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_8_reg_3205),19));

    temp_V_12_fu_1812_p0 <= kernel_V_1_4;
    temp_V_12_fu_1812_p1 <= temp_V_12_fu_1812_p10(8 - 1 downto 0);
    temp_V_12_fu_1812_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_1_5),16));
    temp_V_12_fu_1812_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_12_fu_1812_p0) * signed('0' &temp_V_12_fu_1812_p1))), 16));
    temp_V_15_fu_1857_p0 <= kernel_V_2_0;
    temp_V_15_fu_1857_p1 <= temp_V_15_fu_1857_p10(8 - 1 downto 0);
    temp_V_15_fu_1857_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_2_1),16));
    temp_V_15_fu_1857_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_15_fu_1857_p0) * signed('0' &temp_V_15_fu_1857_p1))), 16));
    temp_V_18_fu_1903_p0 <= kernel_V_2_3;
    temp_V_18_fu_1903_p1 <= temp_V_18_fu_1903_p10(8 - 1 downto 0);
    temp_V_18_fu_1903_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_2_4),16));
    temp_V_18_fu_1903_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_18_fu_1903_p0) * signed('0' &temp_V_18_fu_1903_p1))), 16));
    temp_V_21_fu_1948_p0 <= kernel_V_2_6;
    temp_V_21_fu_1948_p1 <= temp_V_21_fu_1948_p10(8 - 1 downto 0);
    temp_V_21_fu_1948_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_2_6_loc_1_fu_330),16));
    temp_V_21_fu_1948_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_21_fu_1948_p0) * signed('0' &temp_V_21_fu_1948_p1))), 16));
    temp_V_24_fu_1994_p0 <= kernel_V_3_2;
    temp_V_24_fu_1994_p1 <= temp_V_24_fu_1994_p10(8 - 1 downto 0);
    temp_V_24_fu_1994_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_3_3),16));
    temp_V_24_fu_1994_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_24_fu_1994_p0) * signed('0' &temp_V_24_fu_1994_p1))), 16));
    temp_V_27_fu_2039_p0 <= kernel_V_3_5;
    temp_V_27_fu_2039_p1 <= temp_V_27_fu_2039_p10(8 - 1 downto 0);
    temp_V_27_fu_2039_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_3_6_loc_1_l_reg_3156),16));
    temp_V_27_fu_2039_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_27_fu_2039_p0) * signed('0' &temp_V_27_fu_2039_p1))), 16));
    temp_V_30_fu_2085_p0 <= kernel_V_4_1;
    temp_V_30_fu_2085_p1 <= temp_V_30_fu_2085_p10(8 - 1 downto 0);
    temp_V_30_fu_2085_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_4_2),16));
    temp_V_30_fu_2085_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_30_fu_2085_p0) * signed('0' &temp_V_30_fu_2085_p1))), 16));
    temp_V_33_fu_2131_p0 <= kernel_V_4_4;
    temp_V_33_fu_2131_p1 <= temp_V_33_fu_2131_p10(8 - 1 downto 0);
    temp_V_33_fu_2131_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_4_5),16));
    temp_V_33_fu_2131_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_33_fu_2131_p0) * signed('0' &temp_V_33_fu_2131_p1))), 16));
    temp_V_36_fu_2176_p0 <= kernel_V_5_0;
    temp_V_36_fu_2176_p1 <= temp_V_36_fu_2176_p10(8 - 1 downto 0);
    temp_V_36_fu_2176_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_5_1),16));
    temp_V_36_fu_2176_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_36_fu_2176_p0) * signed('0' &temp_V_36_fu_2176_p1))), 16));
    temp_V_39_fu_2222_p0 <= kernel_V_5_3;
    temp_V_39_fu_2222_p1 <= temp_V_39_fu_2222_p10(8 - 1 downto 0);
    temp_V_39_fu_2222_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_5_4),16));
    temp_V_39_fu_2222_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_39_fu_2222_p0) * signed('0' &temp_V_39_fu_2222_p1))), 16));
    temp_V_3_fu_1675_p0 <= kernel_V_0_2;
    temp_V_3_fu_1675_p1 <= temp_V_3_fu_1675_p10(8 - 1 downto 0);
    temp_V_3_fu_1675_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_0_3),16));
    temp_V_3_fu_1675_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_3_fu_1675_p0) * signed('0' &temp_V_3_fu_1675_p1))), 16));
    temp_V_42_fu_2267_p0 <= kernel_V_5_6;
    temp_V_42_fu_2267_p1 <= temp_V_42_fu_2267_p10(8 - 1 downto 0);
    temp_V_42_fu_2267_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_5_6_loc_1_fu_318),16));
    temp_V_42_fu_2267_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_42_fu_2267_p0) * signed('0' &temp_V_42_fu_2267_p1))), 16));
    temp_V_45_fu_2313_p0 <= kernel_V_6_2;
    temp_V_45_fu_2313_p1 <= temp_V_45_fu_2313_p10(8 - 1 downto 0);
    temp_V_45_fu_2313_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_6_3),16));
    temp_V_45_fu_2313_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_45_fu_2313_p0) * signed('0' &temp_V_45_fu_2313_p1))), 16));
    temp_V_47_fu_2347_p0 <= kernel_V_6_4;
    temp_V_47_fu_2347_p1 <= temp_V_47_fu_2347_p10(8 - 1 downto 0);
    temp_V_47_fu_2347_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_6_5),16));
    temp_V_47_fu_2347_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_47_fu_2347_p0) * signed('0' &temp_V_47_fu_2347_p1))), 16));
    temp_V_49_fu_2380_p0 <= kernel_V_6_6;
    temp_V_49_fu_2380_p1 <= temp_V_49_fu_2380_p10(8 - 1 downto 0);
    temp_V_49_fu_2380_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_temp_V_1_fu_314),16));
    temp_V_49_fu_2380_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_49_fu_2380_p0) * signed('0' &temp_V_49_fu_2380_p1))), 16));
    temp_V_6_fu_1720_p0 <= kernel_V_0_5;
    temp_V_6_fu_1720_p1 <= temp_V_6_fu_1720_p10(8 - 1 downto 0);
    temp_V_6_fu_1720_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_0_6_loc_1_l_reg_3174),16));
    temp_V_6_fu_1720_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_6_fu_1720_p0) * signed('0' &temp_V_6_fu_1720_p1))), 16));
    temp_V_9_fu_1766_p0 <= kernel_V_1_1;
    temp_V_9_fu_1766_p1 <= temp_V_9_fu_1766_p10(8 - 1 downto 0);
    temp_V_9_fu_1766_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_V_1_2),16));
    temp_V_9_fu_1766_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(temp_V_9_fu_1766_p0) * signed('0' &temp_V_9_fu_1766_p1))), 16));
    trunc_ln180_1_fu_794_p1 <= select_ln125_fu_769_p3(3 - 1 downto 0);
    trunc_ln180_fu_790_p1 <= select_ln125_1_fu_777_p3(3 - 1 downto 0);
    trunc_ln647_fu_2658_p1 <= grp_fu_2652_p2(8 - 1 downto 0);
    zext_ln130_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln156_fu_655_p3),64));
    zext_ln149_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln156_1_fu_663_p3),64));
    zext_ln160_fu_1259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln156_1_reg_3035),64));
end behav;
