#-----------------------------------------------------------
# Vivado v2023.2 (64-bit)
# SW Build 4029153 on Fri Oct 13 20:13:54 MDT 2023
# IP Build 4028589 on Sat Oct 14 00:45:43 MDT 2023
# SharedData Build 4025554 on Tue Oct 10 17:18:54 MDT 2023
# Start of session at: Fri Apr 26 15:39:52 2024
# Process ID: 114278
# Current directory: /home/adrian/github_repos/OV7670-PynqZ2/Progetto/OV7670-pynq/OV7670-pynq.runs/impl_1
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /home/adrian/github_repos/OV7670-PynqZ2/Progetto/OV7670-pynq/OV7670-pynq.runs/impl_1/design_1_wrapper.vdi
# Journal file: /home/adrian/github_repos/OV7670-PynqZ2/Progetto/OV7670-pynq/OV7670-pynq.runs/impl_1/vivado.jou
# Running On: adrian, OS: Linux, CPU Frequency: 2800.000 MHz, CPU Physical cores: 4, Host memory: 16477 MB
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
Command: open_checkpoint design_1_wrapper_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.02 ; elapsed = 00:00:00.01 . Memory (MB): peak = 1308.488 ; gain = 0.000 ; free physical = 895 ; free virtual = 8680
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:00.24 ; elapsed = 00:00:00.24 . Memory (MB): peak = 1751.793 ; gain = 0.000 ; free physical = 427 ; free virtual = 8216
INFO: [Netlist 29-17] Analyzing 2057 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2023.2
INFO: [Project 1-570] Preparing netlist for logic optimization
WARNING: [Constraints 18-550] Could not create 'IBUF_LOW_PWR' constraint because net 'design_1_i/clk_wiz/clk_in1' is not directly connected to top level port. 'IBUF_LOW_PWR' is ignored for synthesis but preserved for implementation.
Read ShapeDB Complete: Time (s): cpu = 00:00:00.07 ; elapsed = 00:00:00.08 . Memory (MB): peak = 1878.629 ; gain = 11.305 ; free physical = 489 ; free virtual = 8135
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Project 1-853] Binary constraint restore complete.
INFO: [Designutils 20-5722] Start Reading Physical Databases.
Reading placement.
Read Netlist Cache: Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.03 . Memory (MB): peak = 2523.699 ; gain = 0.000 ; free physical = 294 ; free virtual = 7600
Reading placer database...
Read Device Cache: Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2523.699 ; gain = 0.000 ; free physical = 297 ; free virtual = 7600
Read PlaceDB: Time (s): cpu = 00:00:00.9 ; elapsed = 00:00:00.92 . Memory (MB): peak = 2542.770 ; gain = 19.070 ; free physical = 267 ; free virtual = 7571
Read PulsedLatchDB: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2542.770 ; gain = 0.000 ; free physical = 267 ; free virtual = 7571
Reading routing.
Read RouteStorage: Time (s): cpu = 00:00:00.35 ; elapsed = 00:00:00.35 . Memory (MB): peak = 2551.770 ; gain = 9.000 ; free physical = 262 ; free virtual = 7563
Read Physdb Files: Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 2551.770 ; gain = 28.070 ; free physical = 262 ; free virtual = 7563
Restored from archive | CPU: 1.340000 secs | Memory: 40.395142 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 2551.770 ; gain = 32.039 ; free physical = 262 ; free virtual = 7563
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2551.770 ; gain = 0.000 ; free physical = 262 ; free virtual = 7563
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 120 instances were transformed.
  IOBUF => IOBUF (IBUF, OBUFT): 2 instances
  RAM16X1D => RAM32X1D (RAMD32(x2)): 1 instance 
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 111 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 6 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2023.2 (64-bit) build 4029153
WARNING: [Vivado 12-23575] Critical violations of the methodology design rules detected. Critical violations may contribute to timing failures or cause functional issues in hardware. Run report_methodology for more information.
open_checkpoint: Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 2559.770 ; gain = 1251.281 ; free physical = 261 ; free virtual = 7562
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/smartconnect/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to auto. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst block.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/VDMA/axi_vdma>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/VDMA/axi_vdma>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/VDMA/axi_vdma/U0/GEN_SPRT_FOR_S2MM.S2MM_LINEBUFFER_I/GEN_S2MM_FLUSH_SOF_LOGIC.GEN_LINEBUFFER_FLUSH_SOF.GEN_SYNC_FIFO_FLUSH_SOF.I_LINEBUFFER_FIFO/xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/VDMA/axi_vdma>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/VDMA/axi_vdma/U0/GEN_SPRT_FOR_MM2S.MM2S_LINEBUFFER_I/GEN_LINEBUF_NO_SOF.GEN_LINEBUFFER.GEN_SYNC_FIFO.I_LINEBUFFER_FIFO/xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/VDMA/axi_vdma>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/OV7670_GRAYSCALE_TO_AXIS/axis_data_fifo/inst/gen_fifo.xpm_fifo_axis_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/OV7670_GRAYSCALE_TO_AXIS/axis_data_fifo>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/AXI2DVI/axi4s_vid_out/inst/COUPLER_INST/generate_async_fifo.FIFO_INST/XPM_FIFO_ASYNC_INST/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/AXI2DVI/axi4s_vid_out>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/home/adrian/Xilinx/Vivado/2023.2/data/ip'.
INFO: [DRC 23-27] Running DRC with 8 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 input design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 input design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 input design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 input design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 input design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 input design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 input design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 input design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_12_reg_3210_reg input design_1_i/filter/convolution_filter/inst/add_ln68_12_reg_3210_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_14_reg_3215_reg input design_1_i/filter/convolution_filter/inst/add_ln68_14_reg_3215_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_17_reg_3220_reg input design_1_i/filter/convolution_filter/inst/add_ln68_17_reg_3220_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_19_reg_3225_reg input design_1_i/filter/convolution_filter/inst/add_ln68_19_reg_3225_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_1_reg_3190_reg input design_1_i/filter/convolution_filter/inst/add_ln68_1_reg_3190_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_24_reg_3230_reg input design_1_i/filter/convolution_filter/inst/add_ln68_24_reg_3230_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_26_reg_3235_reg input design_1_i/filter/convolution_filter/inst/add_ln68_26_reg_3235_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_29_reg_3240_reg input design_1_i/filter/convolution_filter/inst/add_ln68_29_reg_3240_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_31_reg_3245_reg input design_1_i/filter/convolution_filter/inst/add_ln68_31_reg_3245_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_35_reg_3250_reg input design_1_i/filter/convolution_filter/inst/add_ln68_35_reg_3250_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_37_reg_3255_reg input design_1_i/filter/convolution_filter/inst/add_ln68_37_reg_3255_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_3_reg_3195_reg input design_1_i/filter/convolution_filter/inst/add_ln68_3_reg_3195_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_40_reg_3260_reg input design_1_i/filter/convolution_filter/inst/add_ln68_40_reg_3260_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_6_reg_3200_reg input design_1_i/filter/convolution_filter/inst/add_ln68_6_reg_3200_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_8_reg_3205_reg input design_1_i/filter/convolution_filter/inst/add_ln68_8_reg_3205_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p input design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p input design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 output design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 output design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 output design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 output design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 output design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 output design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 output design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 output design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_12_fu_1812_p2 output design_1_i/filter/convolution_filter/inst/temp_V_12_fu_1812_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_15_fu_1857_p2 output design_1_i/filter/convolution_filter/inst/temp_V_15_fu_1857_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_18_fu_1903_p2 output design_1_i/filter/convolution_filter/inst/temp_V_18_fu_1903_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_21_fu_1948_p2 output design_1_i/filter/convolution_filter/inst/temp_V_21_fu_1948_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_24_fu_1994_p2 output design_1_i/filter/convolution_filter/inst/temp_V_24_fu_1994_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_27_fu_2039_p2 output design_1_i/filter/convolution_filter/inst/temp_V_27_fu_2039_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_30_fu_2085_p2 output design_1_i/filter/convolution_filter/inst/temp_V_30_fu_2085_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_33_fu_2131_p2 output design_1_i/filter/convolution_filter/inst/temp_V_33_fu_2131_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_36_fu_2176_p2 output design_1_i/filter/convolution_filter/inst/temp_V_36_fu_2176_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_39_fu_2222_p2 output design_1_i/filter/convolution_filter/inst/temp_V_39_fu_2222_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_3_fu_1675_p2 output design_1_i/filter/convolution_filter/inst/temp_V_3_fu_1675_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_42_fu_2267_p2 output design_1_i/filter/convolution_filter/inst/temp_V_42_fu_2267_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_45_fu_2313_p2 output design_1_i/filter/convolution_filter/inst/temp_V_45_fu_2313_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_47_fu_2347_p2 output design_1_i/filter/convolution_filter/inst/temp_V_47_fu_2347_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_49_fu_2380_p2 output design_1_i/filter/convolution_filter/inst/temp_V_49_fu_2380_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_6_fu_1720_p2 output design_1_i/filter/convolution_filter/inst/temp_V_6_fu_1720_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_9_fu_1766_p2 output design_1_i/filter/convolution_filter/inst/temp_V_9_fu_1766_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_fu_1472_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_fu_1472_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_fu_1481_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_fu_1481_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_fu_1505_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_fu_1505_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_fu_1514_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_fu_1514_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_fu_875_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_fu_875_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_fu_866_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_fu_866_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U23/scaleImage_mul_mug8j_DSP48_0_U/p output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U23/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U24/scaleImage_mul_mug8j_DSP48_0_U/p output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U24/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 multiplier stage design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 multiplier stage design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 multiplier stage design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 multiplier stage design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 multiplier stage design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 multiplier stage design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 multiplier stage design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 multiplier stage design_1_i/PWM_Kotha_v1_0_1/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_12_reg_3210_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_12_reg_3210_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_14_reg_3215_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_14_reg_3215_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_17_reg_3220_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_17_reg_3220_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_19_reg_3225_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_19_reg_3225_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_1_reg_3190_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_1_reg_3190_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_24_reg_3230_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_24_reg_3230_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_26_reg_3235_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_26_reg_3235_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_29_reg_3240_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_29_reg_3240_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_31_reg_3245_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_31_reg_3245_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_35_reg_3250_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_35_reg_3250_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_37_reg_3255_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_37_reg_3255_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_3_reg_3195_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_3_reg_3195_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_40_reg_3260_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_40_reg_3260_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_6_reg_3200_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_6_reg_3200_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/add_ln68_8_reg_3205_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_8_reg_3205_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_12_fu_1812_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_12_fu_1812_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_15_fu_1857_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_15_fu_1857_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_18_fu_1903_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_18_fu_1903_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_21_fu_1948_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_21_fu_1948_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_24_fu_1994_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_24_fu_1994_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_27_fu_2039_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_27_fu_2039_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_30_fu_2085_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_30_fu_2085_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_33_fu_2131_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_33_fu_2131_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_36_fu_2176_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_36_fu_2176_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_39_fu_2222_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_39_fu_2222_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_3_fu_1675_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_3_fu_1675_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_42_fu_2267_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_42_fu_2267_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_45_fu_2313_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_45_fu_2313_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_47_fu_2347_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_47_fu_2347_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_49_fu_2380_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_49_fu_2380_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_6_fu_1720_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_6_fu_1720_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/convolution_filter/inst/temp_V_9_fu_1766_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_9_fu_1766_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_fu_1472_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_fu_1472_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_reg_2167_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_reg_2167_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_fu_1481_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_fu_1481_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_reg_2172_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_reg_2172_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_fu_1505_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_fu_1505_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_reg_2193_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_reg_2193_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_fu_1514_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_fu_1514_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_reg_2199_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_reg_2199_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_fu_875_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_fu_875_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_reg_2009_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_reg_2009_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_fu_866_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_fu_866_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_reg_2004_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_reg_2004_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U23/scaleImage_mul_mug8j_DSP48_0_U/p multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U23/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U24/scaleImage_mul_mug8j_DSP48_0_U/p multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U24/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/OV7670_GRAYSCALE_TO_AXIS/ov7670_interface/inst/frame_valid_V[0] is a gated clock net sourced by a combinational pin design_1_i/OV7670_GRAYSCALE_TO_AXIS/ov7670_interface/inst/frame_valid_V[0]_INST_0/O, cell design_1_i/OV7670_GRAYSCALE_TO_AXIS/ov7670_interface/inst/frame_valid_V[0]_INST_0. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PLHOLDVIO-2] Non-Optimal connections which could lead to hold violations: A LUT design_1_i/OV7670_GRAYSCALE_TO_AXIS/ov7670_interface/inst/frame_valid_V[0]_INST_0 is driving clock pin of 5 cells. This could lead to large hold time violations. Involved cells are:
design_1_i/OV7670_GRAYSCALE_TO_AXIS/c_counter_binary/U0/i_synth/i_baseblox.i_baseblox_counter/i_out_q_thresh0.q_thresh0_i_reg, design_1_i/OV7670_GRAYSCALE_TO_AXIS/c_counter_binary/U0/i_synth/i_baseblox.i_baseblox_counter/the_addsub/no_pipelining.the_addsub/i_lut6.i_lut6_addsub/i_q.i_simple.qreg/i_no_async_controls.output_reg[1], design_1_i/OV7670_GRAYSCALE_TO_AXIS/c_counter_binary/U0/i_synth/i_baseblox.i_baseblox_counter/the_addsub/no_pipelining.the_addsub/i_lut6.i_lut6_addsub/i_q.i_simple.qreg/i_no_async_controls.output_reg[2], design_1_i/OV7670_GRAYSCALE_TO_AXIS/c_counter_binary/U0/i_synth/i_baseblox.i_baseblox_counter/the_addsub/no_pipelining.the_addsub/i_lut6.i_lut6_addsub/i_q.i_simple.qreg/i_no_async_controls.output_reg[3], and design_1_i/OV7670_GRAYSCALE_TO_AXIS/c_counter_binary/U0/i_synth/i_baseblox.i_baseblox_counter/the_addsub/no_pipelining.the_addsub/i_lut6.i_lut6_addsub/i_q.i_simple.qreg/i_no_async_controls.output_reg[4]
INFO: [DRC REQP-165] writefirst: Synchronous clocking is detected for BRAM (design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_1) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-165] writefirst: Synchronous clocking is detected for BRAM (design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_1) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_0) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_0) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 177 Warnings, 4 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 8 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-1876] WebTalk data collection is mandatory when using a ULT device. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-83] Releasing license: Implementation
48 Infos, 179 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:39 ; elapsed = 00:00:15 . Memory (MB): peak = 3161.266 ; gain = 589.621 ; free physical = 212 ; free virtual = 7081
INFO: [Common 17-206] Exiting Vivado at Fri Apr 26 15:40:25 2024...
