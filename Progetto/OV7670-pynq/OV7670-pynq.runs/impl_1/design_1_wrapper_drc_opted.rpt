Copyright 1986-2022 Xilinx, Inc. All Rights Reserved. Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2023.2 (lin64) Build 4029153 Fri Oct 13 20:13:54 MDT 2023
| Date         : Thu Apr 25 15:02:38 2024
| Host         : adrian running 64-bit Ubuntu 20.04.6 LTS
| Command      : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
| Design       : design_1_wrapper
| Device       : xc7z020clg400-1
| Speed File   : -1
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 165
+-------------+----------+-------------------------------------------------------------+------------+
| Rule        | Severity | Description                                                 | Violations |
+-------------+----------+-------------------------------------------------------------+------------+
| DPIP-1      | Warning  | Input pipelining                                            | 42         |
| DPOP-1      | Warning  | PREG Output pipelining                                      | 48         |
| DPOP-2      | Warning  | MREG Output pipelining                                      | 69         |
| PLCK-12     | Warning  | Clock Placer Checks                                         | 1          |
| PLHOLDVIO-2 | Warning  | Non-Optimal connections which could lead to hold violations | 1          |
| REQP-165    | Advisory | writefirst                                                  | 2          |
| REQP-181    | Advisory | writefirst                                                  | 2          |
+-------------+----------+-------------------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-1#1 Warning
Input pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 input design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_12_reg_3210_reg input design_1_i/filter/convolution_filter/inst/add_ln68_12_reg_3210_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_14_reg_3215_reg input design_1_i/filter/convolution_filter/inst/add_ln68_14_reg_3215_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_17_reg_3220_reg input design_1_i/filter/convolution_filter/inst/add_ln68_17_reg_3220_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_19_reg_3225_reg input design_1_i/filter/convolution_filter/inst/add_ln68_19_reg_3225_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_1_reg_3190_reg input design_1_i/filter/convolution_filter/inst/add_ln68_1_reg_3190_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_24_reg_3230_reg input design_1_i/filter/convolution_filter/inst/add_ln68_24_reg_3230_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#15 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_26_reg_3235_reg input design_1_i/filter/convolution_filter/inst/add_ln68_26_reg_3235_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#16 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_29_reg_3240_reg input design_1_i/filter/convolution_filter/inst/add_ln68_29_reg_3240_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#17 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_31_reg_3245_reg input design_1_i/filter/convolution_filter/inst/add_ln68_31_reg_3245_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#18 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_35_reg_3250_reg input design_1_i/filter/convolution_filter/inst/add_ln68_35_reg_3250_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#19 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_37_reg_3255_reg input design_1_i/filter/convolution_filter/inst/add_ln68_37_reg_3255_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#20 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_3_reg_3195_reg input design_1_i/filter/convolution_filter/inst/add_ln68_3_reg_3195_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#21 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_40_reg_3260_reg input design_1_i/filter/convolution_filter/inst/add_ln68_40_reg_3260_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#22 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_6_reg_3200_reg input design_1_i/filter/convolution_filter/inst/add_ln68_6_reg_3200_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#23 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_8_reg_3205_reg input design_1_i/filter/convolution_filter/inst/add_ln68_8_reg_3205_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#24 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#25 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#26 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#27 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#28 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#29 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#30 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#31 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#32 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#33 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#34 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#35 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#36 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#37 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#38 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#39 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#40 Warning
Input pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p input design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#41 Warning
Input pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p input design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#42 Warning
Input pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p input design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 output design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 output design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 output design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 output design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#18 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#19 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#20 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#21 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p output design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#22 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_12_fu_1812_p2 output design_1_i/filter/convolution_filter/inst/temp_V_12_fu_1812_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#23 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_15_fu_1857_p2 output design_1_i/filter/convolution_filter/inst/temp_V_15_fu_1857_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#24 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_18_fu_1903_p2 output design_1_i/filter/convolution_filter/inst/temp_V_18_fu_1903_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#25 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_21_fu_1948_p2 output design_1_i/filter/convolution_filter/inst/temp_V_21_fu_1948_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#26 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_24_fu_1994_p2 output design_1_i/filter/convolution_filter/inst/temp_V_24_fu_1994_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#27 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_27_fu_2039_p2 output design_1_i/filter/convolution_filter/inst/temp_V_27_fu_2039_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#28 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_30_fu_2085_p2 output design_1_i/filter/convolution_filter/inst/temp_V_30_fu_2085_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#29 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_33_fu_2131_p2 output design_1_i/filter/convolution_filter/inst/temp_V_33_fu_2131_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#30 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_36_fu_2176_p2 output design_1_i/filter/convolution_filter/inst/temp_V_36_fu_2176_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#31 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_39_fu_2222_p2 output design_1_i/filter/convolution_filter/inst/temp_V_39_fu_2222_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#32 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_3_fu_1675_p2 output design_1_i/filter/convolution_filter/inst/temp_V_3_fu_1675_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#33 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_42_fu_2267_p2 output design_1_i/filter/convolution_filter/inst/temp_V_42_fu_2267_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#34 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_45_fu_2313_p2 output design_1_i/filter/convolution_filter/inst/temp_V_45_fu_2313_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#35 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_47_fu_2347_p2 output design_1_i/filter/convolution_filter/inst/temp_V_47_fu_2347_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#36 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_49_fu_2380_p2 output design_1_i/filter/convolution_filter/inst/temp_V_49_fu_2380_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#37 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_6_fu_1720_p2 output design_1_i/filter/convolution_filter/inst/temp_V_6_fu_1720_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#38 Warning
PREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_9_fu_1766_p2 output design_1_i/filter/convolution_filter/inst/temp_V_9_fu_1766_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#39 Warning
PREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_fu_1472_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_fu_1472_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#40 Warning
PREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_fu_1481_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_fu_1481_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#41 Warning
PREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_fu_1505_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_fu_1505_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#42 Warning
PREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_fu_1514_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_fu_1514_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#43 Warning
PREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_fu_875_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_fu_875_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#44 Warning
PREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_fu_866_p2 output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_fu_866_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#45 Warning
PREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#46 Warning
PREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#47 Warning
PREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U23/scaleImage_mul_mug8j_DSP48_0_U/p output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U23/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#48 Warning
PREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U24/scaleImage_mul_mug8j_DSP48_0_U/p output design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U24/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0 multiplier stage design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0 multiplier stage design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1 multiplier stage design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2 multiplier stage design_1_i/PWM_Kotha_v1_0_0/U0/PWM_Kotha_v1_0_S00_AXI_inst/CLK/dcc_filler0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_12_reg_3210_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_12_reg_3210_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_14_reg_3215_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_14_reg_3215_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_17_reg_3220_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_17_reg_3220_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_19_reg_3225_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_19_reg_3225_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_1_reg_3190_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_1_reg_3190_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_24_reg_3230_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_24_reg_3230_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_26_reg_3235_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_26_reg_3235_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_29_reg_3240_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_29_reg_3240_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_31_reg_3245_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_31_reg_3245_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_35_reg_3250_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_35_reg_3250_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_37_reg_3255_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_37_reg_3255_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_3_reg_3195_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_3_reg_3195_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_40_reg_3260_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_40_reg_3260_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_6_reg_3200_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_6_reg_3200_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/add_ln68_8_reg_3205_reg multiplier stage design_1_i/filter/convolution_filter/inst/add_ln68_8_reg_3205_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U11/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U13/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U15/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U17/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U19/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U21/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U23/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U25/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U27/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U29/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U3/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U31/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U32/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U33/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#34 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U5/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#35 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U7/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#36 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p multiplier stage design_1_i/filter/convolution_filter/inst/convolution_filtejbC_U9/convolution_filtejbC_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#37 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_12_fu_1812_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_12_fu_1812_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#38 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_15_fu_1857_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_15_fu_1857_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#39 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_18_fu_1903_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_18_fu_1903_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#40 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_21_fu_1948_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_21_fu_1948_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#41 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_24_fu_1994_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_24_fu_1994_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#42 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_27_fu_2039_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_27_fu_2039_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#43 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_30_fu_2085_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_30_fu_2085_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#44 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_33_fu_2131_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_33_fu_2131_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#45 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_36_fu_2176_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_36_fu_2176_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#46 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_39_fu_2222_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_39_fu_2222_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#47 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_3_fu_1675_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_3_fu_1675_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#48 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_42_fu_2267_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_42_fu_2267_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#49 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_45_fu_2313_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_45_fu_2313_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#50 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_47_fu_2347_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_47_fu_2347_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#51 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_49_fu_2380_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_49_fu_2380_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#52 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_6_fu_1720_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_6_fu_1720_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#53 Warning
MREG Output pipelining  
DSP design_1_i/filter/convolution_filter/inst/temp_V_9_fu_1766_p2 multiplier stage design_1_i/filter/convolution_filter/inst/temp_V_9_fu_1766_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#54 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_fu_1472_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_fu_1472_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#55 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_reg_2167_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_1_reg_2167_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#56 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_fu_1481_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_fu_1481_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#57 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_reg_2172_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_3_reg_2172_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#58 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_fu_1505_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_fu_1505_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#59 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_reg_2193_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_5_reg_2193_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#60 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_fu_1514_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_fu_1514_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#61 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_reg_2199_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln1118_7_reg_2199_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#62 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_fu_875_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_fu_875_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#63 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_reg_2009_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_1_reg_2009_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#64 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_fu_866_p2 multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_fu_866_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#65 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_reg_2004_reg multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/mul_ln703_reg_2004_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#66 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U21/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#67 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U22/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#68 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U23/scaleImage_mul_mug8j_DSP48_0_U/p multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U23/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#69 Warning
MREG Output pipelining  
DSP design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U24/scaleImage_mul_mug8j_DSP48_0_U/p multiplier stage design_1_i/filter/scaleImage/inst/Resize_U0/grp_Resize_opr_linear_fu_160/scaleImage_mul_mug8j_U24/scaleImage_mul_mug8j_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

PLCK-12#1 Warning
Clock Placer Checks  
Poor placement for routing between an IO pin and BUFG. 
Resolution: Poor placement of an IO pin and a BUFG has resulted in the router using a non-dedicated path between the two.  There are several things that could trigger this DRC, each of which can cause unpredictable clock insertion delays that result in poor timing.  This DRC could be caused by any of the following: (a) a clock port was placed on a pin that is not a CCIO-pin (b)the BUFG has not been placed in the same half of the device or SLR as the CCIO-pin (c) a single ended clock has been placed on the N-Side of a differential pair CCIO-pin.
 This is normally an ERROR but the CLOCK_DEDICATED_ROUTE constraint is set to FALSE allowing your design to continue. The use of this override is highly discouraged as it may lead to very poor timing results. It is recommended that this error condition be corrected in the design.

	PCLK_IBUF_inst (IBUF.O) is locked to W16
	PCLK_IBUF_BUFG_inst (BUFG.I) cannot be placed

Related violations: <none>

PLHOLDVIO-2#1 Warning
Non-Optimal connections which could lead to hold violations  
A LUT design_1_i/OV7670_GRAYSCALE_TO_AXIS/ov7670_interface/inst/frame_valid_V[0]_INST_0 is driving clock pin of 5 cells. This could lead to large hold time violations. Involved cells are:
design_1_i/OV7670_GRAYSCALE_TO_AXIS/c_counter_binary/U0/i_synth/i_baseblox.i_baseblox_counter/i_out_q_thresh0.q_thresh0_i_reg,
design_1_i/OV7670_GRAYSCALE_TO_AXIS/c_counter_binary/U0/i_synth/i_baseblox.i_baseblox_counter/the_addsub/no_pipelining.the_addsub/i_lut6.i_lut6_addsub/i_q.i_simple.qreg/i_no_async_controls.output_reg[1],
design_1_i/OV7670_GRAYSCALE_TO_AXIS/c_counter_binary/U0/i_synth/i_baseblox.i_baseblox_counter/the_addsub/no_pipelining.the_addsub/i_lut6.i_lut6_addsub/i_q.i_simple.qreg/i_no_async_controls.output_reg[2],
design_1_i/OV7670_GRAYSCALE_TO_AXIS/c_counter_binary/U0/i_synth/i_baseblox.i_baseblox_counter/the_addsub/no_pipelining.the_addsub/i_lut6.i_lut6_addsub/i_q.i_simple.qreg/i_no_async_controls.output_reg[3]
design_1_i/OV7670_GRAYSCALE_TO_AXIS/c_counter_binary/U0/i_synth/i_baseblox.i_baseblox_counter/the_addsub/no_pipelining.the_addsub/i_lut6.i_lut6_addsub/i_q.i_simple.qreg/i_no_async_controls.output_reg[4]
Related violations: <none>

REQP-165#1 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_1) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

REQP-165#2 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_1) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

REQP-181#1 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_0) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>

REQP-181#2 Advisory
writefirst  
Synchronous clocking is detected for BRAM (design_1_i/VDMA/axi_vdma/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_0) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
Related violations: <none>


